{"version":3,"file":"pixi-ooo-renderer.es.js","sources":["../src/OooElement.ts","../src/OooRenderer.ts","../src/OooRendererPluginFactory.ts"],"sourcesContent":["import { DisplayObject, Rectangle } from 'pixi.js';\n\nexport class OooElement\n{\n    public displayObject: DisplayObject;\n    public pluginName: string;\n\n    public batchIndex: number;\n    public zIndex: number;\n    public zDependencies: Array<OooElement>;\n\n    getBounds(): Rectangle\n    {\n        return this.displayObject.getBounds(true);\n    }\n}\n","import { DisplayObject, Renderer, ObjectRenderer } from 'pixi.js';\nimport { SpatialHash } from 'pixi-spatial-hash';\nimport { OooElement } from './OooElement';\nimport { ObjectPoolFactory } from '@pixi-essentials/object-pool';\n\nconst elementPool = ObjectPoolFactory.build(OooElement as any);\n\n/**\n * @public\n */\nexport interface IOooRendererOptions {\n    blockSize: number;\n    pluginProvider: (displayObject: DisplayObject) => string;\n}\n\n/**\n * The out-of-order rendering pipeline\n *\n * @public\n */\nexport class OooRenderer extends ObjectRenderer\n{\n    public spatialHash: SpatialHash<DisplayObject>;\n    public pluginProvider: (displayObject: DisplayObject) => string;\n\n    protected batchList: Array<{ pluginName: string; displayObjects: Array<DisplayObject> }>;\n\n    constructor(renderer: Renderer, options: Partial<IOooRendererOptions> = {})\n    {\n        super(renderer);\n\n        /**\n         * 2D spatial hash of the buffered display-objects. This updated on each render call on this object-renderer.\n         */\n        this.spatialHash = new SpatialHash<DisplayObject>(options.blockSize || 256);\n\n        /**\n         * Provides the pipeline used to render an object. By default, the ooo-renderer will use the `pluginName` property\n         * to determine the pipeline.\n         */\n        this.pluginProvider = options.pluginProvider || ((displayObject: any): string => displayObject.pluginName);\n\n        /**\n         * The list of batches created for the buffered objects\n         */\n        this.batchList = [];\n    }\n\n    start(): void\n    {\n        this.spatialHash.clear();\n        this.batchList = [];\n    }\n\n    /**\n     * @override\n     */\n    render(displayObject: DisplayObject): void\n    {\n        const element: OooElement = elementPool.allocate();\n        const elementBounds = displayObject.getBounds(true);\n        const zDependencies: Array<OooElement> = this.spatialHash.search(elementBounds);\n\n        element.displayObject = displayObject;\n        element.pluginName = this.pluginProvider(displayObject);\n        element.zIndex = zDependencies.length\n            ? zDependencies.reduce((maxIndex, zDep) => Math.max(maxIndex, zDep.zIndex), 0)\n            : 0;\n        element.zDependencies = zDependencies;\n\n        this.spatialHash.put(element, elementBounds);\n\n        // The minimum batch index needed to ensure this display-object is rendered after its z-dependencies. This\n        // is always less than the length of the batchList.\n        const minBatchIndex = zDependencies.length\n            ? zDependencies.reduce((minBatchIndex, zDep) => Math.max(minBatchIndex, zDep.batchIndex), 0)\n            : 0;\n\n        // Search for a batch for this display-object after minBatchIndex\n        for (let i = minBatchIndex, j = this.batchList.length; i < j; i++)\n        {\n            const batch = this.batchList[i];\n            const pluginName = batch.pluginName;\n\n            if (pluginName === element.pluginName)\n            {\n                batch.displayObjects.push(displayObject);\n\n                return;\n            }\n        }\n\n        const batch = {\n            pluginName: element.pluginName,\n            displayObjects: [displayObject],\n        };\n\n        this.batchList.push(batch);\n    }\n\n    /**\n     * @override\n     */\n    flush(): void\n    {\n        const rendererPlugins = this.renderer.plugins;\n\n        for (let i = 0, j = this.batchList.length; i < j; i++)\n        {\n            const batch = this.batchList[i];\n            const displayObjects = batch.displayObjects;\n            const pluginRenderer: ObjectRenderer = rendererPlugins[batch.pluginName];\n\n            pluginRenderer.start();\n\n            for (let u = 0, v = displayObjects.length; u < v; u++)\n            {\n                pluginRenderer.render(displayObjects[u]);\n            }\n\n            pluginRenderer.stop();\n        }\n    }\n}\n","import { IOooRendererOptions, OooRenderer } from './OooRenderer';\nimport { Renderer } from 'pixi.js';\n\n/**\n * Plugin factory for the out-of-order pipeline\n */\nexport class OooRendererPluginFactory\n{\n    static from(options: IOooRendererOptions): typeof OooRenderer\n    {\n        return class extends OooRenderer\n        {\n            constructor(renderer: Renderer)\n            {\n                super(renderer, options);\n            }\n        };\n    }\n}\n"],"names":[],"mappings":"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"}