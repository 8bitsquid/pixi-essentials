{"version":3,"file":"pixi-ooo-renderer.js","sources":["../src/OooElement.ts","../src/OooRenderer.ts","../src/OooRendererPluginFactory.ts"],"sourcesContent":["import { DisplayObject, Rectangle } from 'pixi.js';\n\nexport class OooElement\n{\n    public displayObject: DisplayObject;\n    public pluginName: string;\n\n    public batchIndex: number;\n    public zIndex: number;\n    public zDependencies: Array<OooElement>;\n\n    getBounds(): Rectangle\n    {\n        return this.displayObject.getBounds(true);\n    }\n}\n","import { DisplayObject, Renderer, ObjectRenderer } from 'pixi.js';\nimport { SpatialHash } from 'pixi-spatial-hash';\nimport { OooElement } from './OooElement';\nimport { ObjectPoolFactory } from '@pixi-essentials/object-pool';\n\nconst elementPool = ObjectPoolFactory.build(OooElement as any);\n\n/**\n * @public\n */\nexport interface IOooRendererOptions {\n    blockSize: number;\n    pluginProvider: (displayObject: DisplayObject) => string;\n}\n\n/**\n * The out-of-order rendering pipeline\n *\n * @public\n */\nexport class OooRenderer extends ObjectRenderer\n{\n    public spatialHash: SpatialHash<DisplayObject>;\n    public pluginProvider: (displayObject: DisplayObject) => string;\n\n    protected batchList: Array<{ pluginName: string; displayObjects: Array<DisplayObject> }>;\n\n    constructor(renderer: Renderer, options: Partial<IOooRendererOptions> = {})\n    {\n        super(renderer);\n\n        /**\n         * 2D spatial hash of the buffered display-objects. This updated on each render call on this object-renderer.\n         */\n        this.spatialHash = new SpatialHash<DisplayObject>(options.blockSize || 256);\n\n        /**\n         * Provides the pipeline used to render an object. By default, the ooo-renderer will use the `pluginName` property\n         * to determine the pipeline.\n         */\n        this.pluginProvider = options.pluginProvider || ((displayObject: any): string => displayObject.pluginName);\n\n        /**\n         * The list of batches created for the buffered objects\n         */\n        this.batchList = [];\n    }\n\n    start(): void\n    {\n        this.spatialHash.clear();\n        this.batchList = [];\n    }\n\n    /**\n     * @override\n     */\n    render(displayObject: DisplayObject): void\n    {\n        const element: OooElement = elementPool.allocate();\n        const elementBounds = displayObject.getBounds(true);\n        const zDependencies: Array<OooElement> = this.spatialHash.search(elementBounds);\n\n        element.displayObject = displayObject;\n        element.pluginName = this.pluginProvider(displayObject);\n        element.zIndex = zDependencies.length\n            ? zDependencies.reduce((maxIndex, zDep) => Math.max(maxIndex, zDep.zIndex), 0)\n            : 0;\n        element.zDependencies = zDependencies;\n\n        this.spatialHash.put(element, elementBounds);\n\n        // The minimum batch index needed to ensure this display-object is rendered after its z-dependencies. This\n        // is always less than the length of the batchList.\n        const minBatchIndex = zDependencies.length\n            ? zDependencies.reduce((minBatchIndex, zDep) => Math.max(minBatchIndex, zDep.batchIndex), 0)\n            : 0;\n\n        // Search for a batch for this display-object after minBatchIndex\n        for (let i = minBatchIndex, j = this.batchList.length; i < j; i++)\n        {\n            const batch = this.batchList[i];\n            const pluginName = batch.pluginName;\n\n            if (pluginName === element.pluginName)\n            {\n                batch.displayObjects.push(displayObject);\n\n                return;\n            }\n        }\n\n        const batch = {\n            pluginName: element.pluginName,\n            displayObjects: [displayObject],\n        };\n\n        this.batchList.push(batch);\n    }\n\n    /**\n     * @override\n     */\n    flush(): void\n    {\n        const rendererPlugins = this.renderer.plugins;\n\n        for (let i = 0, j = this.batchList.length; i < j; i++)\n        {\n            const batch = this.batchList[i];\n            const displayObjects = batch.displayObjects;\n            const pluginRenderer: ObjectRenderer = rendererPlugins[batch.pluginName];\n\n            pluginRenderer.start();\n\n            for (let u = 0, v = displayObjects.length; u < v; u++)\n            {\n                pluginRenderer.render(displayObjects[u]);\n            }\n\n            pluginRenderer.stop();\n        }\n    }\n}\n","import { IOooRendererOptions, OooRenderer } from './OooRenderer';\nimport { Renderer } from 'pixi.js';\n\n/**\n * Plugin factory for the out-of-order pipeline\n */\nexport class OooRendererPluginFactory\n{\n    static from(options: IOooRendererOptions): typeof OooRenderer\n    {\n        return class extends OooRenderer\n        {\n            constructor(renderer: Renderer)\n            {\n                super(renderer, options);\n            }\n        };\n    }\n}\n"],"names":["OooElement","this","displayObject","getBounds","elementPool","ObjectPoolFactory","build","renderer","options","_super","_this","spatialHash","SpatialHash","blockSize","pluginProvider","pluginName","batchList","__extends","OooRenderer","clear","element","allocate","elementBounds","zDependencies","search","zIndex","length","reduce","maxIndex","zDep","Math","max","put","i","minBatchIndex","batchIndex","j","batch_1","displayObjects","push","batch","rendererPlugins","plugins","pluginRenderer","start","u","v","render","stop","ObjectRenderer","OooRendererPluginFactory"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;yYAEA,iBAAA,cAaA,OAJIA,sBAAA,WAEI,OAAOC,KAAKC,cAAcC,WAAU,SCRtCC,EAAcC,oBAAkBC,MAAMN,iBAsBxC,WAAYO,EAAoBC,gBAAAA,MAAhC,MAEIC,YAAMF,gBAKNG,EAAKC,YAAc,IAAIC,cAA2BJ,EAAQK,WAAa,KAMvEH,EAAKI,eAAiBN,EAAQM,yBAAoBZ,GAA+B,OAAAA,EAAca,YAK/FL,EAAKM,UAAY,KA8EzB,OAvGiCC,OA4B7BC,kBAAA,WAEIjB,KAAKU,YAAYQ,QACjBlB,KAAKe,UAAY,IAMrBE,mBAAA,SAAOhB,GAEH,IAAMkB,EAAsBhB,EAAYiB,WAClCC,EAAgBpB,EAAcC,WAAU,GACxCoB,EAAmCtB,KAAKU,YAAYa,OAAOF,GAEjEF,EAAQlB,cAAgBA,EACxBkB,EAAQL,WAAad,KAAKa,eAAeZ,GACzCkB,EAAQK,OAASF,EAAcG,OACzBH,EAAcI,QAAO,SAACC,EAAUC,GAAS,OAAAC,KAAKC,IAAIH,EAAUC,EAAKJ,UAAS,GAC1E,EACNL,EAAQG,cAAgBA,EAExBtB,KAAKU,YAAYqB,IAAIZ,EAASE,GAS9B,IALA,IAKSW,EALaV,EAAcG,OAC9BH,EAAcI,QAAO,SAACO,EAAeL,GAAS,OAAAC,KAAKC,IAAIG,EAAeL,EAAKM,cAAa,GACxF,EAGsBC,EAAInC,KAAKe,UAAUU,OAAQO,EAAIG,EAAGH,IAC9D,CACI,IAAMI,EAAQpC,KAAKe,UAAUiB,GAG7B,GAFmBI,EAAMtB,aAENK,EAAQL,WAIvB,YAFAsB,EAAMC,eAAeC,KAAKrC,GAMlC,IAAMsC,EAAQ,CACVzB,WAAYK,EAAQL,WACpBuB,eAAgB,CAACpC,IAGrBD,KAAKe,UAAUuB,KAAKC,IAMxBtB,kBAAA,WAII,IAFA,IAAMuB,EAAkBxC,KAAKM,SAASmC,QAE7BT,EAAI,EAAGG,EAAInC,KAAKe,UAAUU,OAAQO,EAAIG,EAAGH,IAClD,CACI,IAAMO,EAAQvC,KAAKe,UAAUiB,GACvBK,EAAiBE,EAAMF,eACvBK,EAAiCF,EAAgBD,EAAMzB,YAE7D4B,EAAeC,QAEf,IAAK,IAAIC,EAAI,EAAGC,EAAIR,EAAeZ,OAAQmB,EAAIC,EAAGD,IAE9CF,EAAeI,OAAOT,EAAeO,IAGzCF,EAAeK,YApGMC,+BCdjC,cAYA,OAVWC,OAAP,SAAY1C,GAER,mBAEI,WAAYD,UAERE,YAAMF,EAAUC,SAExB,OANqBS,UAAAC"}