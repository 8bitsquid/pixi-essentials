{"version":3,"file":"transformer.js","sources":["../../../common/temp/node_modules/.pnpm/registry.npmjs.org/tslib/2.0.1/node_modules/tslib/tslib.es6.js","../src/TransformerHandle.ts","../src/utils/skewTransform.ts","../src/utils/decomposeTransform.ts","../src/utils/multiplyTransform.ts","../src/Transformer.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/// <reference path=\"./types.d.ts\" />\n\nimport { Graphics } from '@pixi/graphics';\nimport { Point } from '@pixi/math';\nimport { Renderer } from '@pixi/core';\n\nimport { InteractionEvent } from '@pixi/interaction';\nimport type { Handle } from './Transformer';\n\n/**\n * @see TransformerHandle#style\n */\nexport interface ITransformerHandleStyle\n{\n    /**\n     * Fill color of the handle\n     */\n    color: number;\n\n    /**\n     * Outline color of the handle\n     */\n    outlineColor: number;\n\n    /**\n     * Outline thickness around the handle\n     */\n    outlineThickness: number;\n\n    /**\n     * Radius (or size for non-circular handles) of the handle\n     */\n    radius: number;\n\n    /**\n     * {@link TransformerHandle} provides three types of handle shapes - 'circle', 'square', 'tooth'.\n     */\n    shape: string;\n}\n\n/**\n * The default transformer handle style.\n *\n * @ignore\n */\nconst DEFAULT_HANDLE_STYLE: ITransformerHandleStyle = {\n    color: 0xffffff,\n    outlineColor: 0x000000,\n    outlineThickness: 1,\n    radius: 8,\n    shape: 'tooth',\n};\n\n/**\n * The transfomer handle base implementation.\n */\nexport class TransformerHandle extends Graphics\n{\n    onHandleDelta: (pointerPosition: Point) => void;\n    onHandleCommit: () => void;\n\n    protected _handle: Handle;\n    protected _style: ITransformerHandleStyle;\n    protected _dirty: boolean;\n\n    private _pointerDown: boolean;\n    private _pointerDragging: boolean;\n    private _pointerPosition: Point;\n\n    /**\n     * @param {string} handle - the type of handle being drawn\n     * @param {object} styleOpts - styling options passed by the user\n     * @param {function} handler - handler for drag events, it receives the pointer position; used by {@code onDrag}.\n     * @param {function} commit - handler for drag-end events.\n     * @param {string}[cursor='move'] - a custom cursor to be applied on this handle\n     */\n    constructor(\n        handle: Handle,\n        styleOpts: Partial<ITransformerHandleStyle> = {},\n        handler: (pointerPosition: Point) => void,\n        commit: () => void,\n        cursor?: string)\n    {\n        super();\n\n        const style: ITransformerHandleStyle = Object.assign({}, DEFAULT_HANDLE_STYLE, styleOpts);\n\n        this._handle = handle;\n        this._style = style;\n        this.onHandleDelta = handler;\n        this.onHandleCommit = commit;\n\n        /**\n         * This flags whether this handle should be redrawn in the next frame due to style changes.\n         */\n        this._dirty = true;\n\n        // Pointer events\n        this.interactive = true;\n        this.cursor = cursor || 'move';\n        this._pointerDown = false;\n        this._pointerDragging = false;\n        this._pointerPosition = new Point();\n        this.on('mousedown', this.onPointerDown, this);\n        this.on('mousemove', this.onPointerMove, this);\n        this.on('mouseup', this.onPointerUp, this);\n        this.on('mouseupoutside', this.onPointerUp, this);\n    }\n\n    /**\n     * The currently applied handle style.\n     */\n    get style(): Partial<ITransformerHandleStyle>\n    {\n        return this._style;\n    }\n    set style(value: Partial<ITransformerHandleStyle>)\n    {\n        this._style = Object.assign({}, DEFAULT_HANDLE_STYLE, value);\n        this._dirty = true;\n    }\n\n    render(renderer: Renderer): void\n    {\n        if (this._dirty)\n        {\n            this.draw();\n\n            this._dirty = false;\n        }\n\n        super.render(renderer);\n    }\n\n    /**\n     * Redraws the handle's geometry. This is called on a `render` if {@code this._dirty} is true.\n     */\n    protected draw(): void\n    {\n        const handle = this._handle;\n        const style = this._style;\n\n        const radius = style.radius;\n\n        this.lineStyle(style.outlineThickness, style.outlineColor)\n            .beginFill(style.color);\n\n        if (style.shape === 'square')\n        {\n            this.drawRect(-radius / 2, -radius / 2, radius, radius);\n        }\n        else if (style.shape === 'tooth')\n        {\n            switch (handle)\n            {\n                case 'middleLeft':\n                    this.drawPolygon([\n                        -radius / 2, -radius / 2,\n                        -radius / 2, radius / 2,\n                        radius / 2, radius / 2,\n                        radius * 1.1, 0,\n                        radius / 2, -radius / 2,\n                    ]);\n                    break;\n                case 'topCenter':\n                    this.drawPolygon([\n                        -radius / 2, -radius / 2,\n                        radius / 2, -radius / 2,\n                        radius / 2, radius / 2,\n                        0, radius * 1.1,\n                        -radius / 2, radius / 2,\n                    ]);\n                    break;\n                case 'middleRight':\n                    this.drawPolygon([\n                        -radius / 2, radius / 2,\n                        -radius * 1.1, 0,\n                        -radius / 2, -radius / 2,\n                        radius / 2, -radius / 2,\n                        radius / 2, radius / 2,\n                    ]);\n                    break;\n                case 'bottomCenter':\n                    this.drawPolygon([\n                        0, -radius * 1.1,\n                        radius / 2, -radius / 2,\n                        radius / 2, radius / 2,\n                        -radius / 2, radius / 2,\n                        -radius / 2, -radius / 2,\n                    ]);\n                    break;\n                case 'rotator':\n                    this.drawCircle(0, 0, radius / Math.sqrt(2));\n                    break;\n                default:\n                    this.drawRect(-radius / 2, -radius / 2, radius, radius);\n                    break;\n            }\n        }\n        else\n        {\n            this.drawCircle(0, 0, radius);\n        }\n\n        this.endFill();\n    }\n\n    /**\n     * Handles the `pointerdown` event. You must call the super implementation.\n     *\n     * @param e\n     */\n    protected onPointerDown(e: InteractionEvent): void\n    {\n        this._pointerDown = true;\n        this._pointerDragging = false;\n\n        e.stopPropagation();\n    }\n\n    /**\n     * Handles the `pointermove` event. You must call the super implementation.\n     *\n     * @param e\n     */\n    protected onPointerMove(e: InteractionEvent): void\n    {\n        if (!this._pointerDown)\n        {\n            return;\n        }\n\n        if (this._pointerDragging)\n        {\n            this.onDrag(e);\n        }\n        else\n        {\n            this.onDragStart(e);\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * Handles the `pointerup` event. You must call the super implementation.\n     *\n     * @param e\n     */\n    protected onPointerUp(e: InteractionEvent): void\n    {\n        if (this._pointerDragging)\n        {\n            this.onDragEnd(e);\n        }\n\n        this._pointerDown = false;\n    }\n\n    /**\n     * Called on the first `pointermove` when {@code this._pointerDown} is true. You must call the super implementation.\n     *\n     * @param e\n     */\n    protected onDragStart(e: InteractionEvent): void\n    {\n        this._pointerPosition.copyFrom(e.data.global);\n\n        this._pointerDragging = true;\n    }\n\n    /**\n     * Called on a `pointermove` when {@code this._pointerDown} & {@code this._pointerDragging}.\n     *\n     * @param e\n     */\n    protected onDrag(e: InteractionEvent): void\n    {\n        const currentPosition = e.data.global;\n\n        // Callback handles the rest!\n        if (this.onHandleDelta)\n        {\n            this.onHandleDelta(currentPosition);\n        }\n\n        this._pointerPosition.copyFrom(currentPosition);\n    }\n\n    /**\n     * Called on a `pointerup` or `pointerupoutside` & {@code this._pointerDragging} was true.\n     *\n     * @param _\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected onDragEnd(_: InteractionEvent): void\n    {\n        this._pointerDragging = false;\n\n        if (this.onHandleCommit)\n        {\n            this.onHandleCommit();\n        }\n    }\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Matrix } from '@pixi/math';\n\nconst tempMatrix = new Matrix();\n\n/**\n * @param angle\n * @returns a horizontal skew matrix\n */\nexport function createHorizontalSkew(angle: number): Matrix\n{\n    const matrix = tempMatrix.identity();\n\n    matrix.c = Math.tan(angle);\n\n    return matrix;\n}\n\n/**\n * @param angle\n * @returns a vertical skew matrix\n */\nexport function createVerticalSkew(angle: number): Matrix\n{\n    const matrix = tempMatrix.identity();\n\n    matrix.b = Math.tan(angle);\n\n    return matrix;\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport type { Transform, Matrix } from '@pixi/math';\n\n/**\n * Decomposes the matrix into transform, while preserving rotation & the pivot.\n *\n * @ignore\n * @param transform\n * @param matrix\n * @param rotation\n * @param pivot\n */\nexport function decomposeTransform(\n    transform: Transform,\n    matrix: Matrix,\n    rotation?: number,\n    pivot = transform.pivot,\n): Transform\n{\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n\n    const skewX = -Math.atan2(-c, d);\n    const skewY = Math.atan2(b, a);\n\n    rotation = rotation !== undefined && rotation !== null ? rotation : skewY;\n\n    // set pivot\n    transform.pivot.set(pivot.x, pivot.y);\n\n    // next set rotation, skew angles\n    transform.rotation = rotation;\n    transform.skew.x = rotation + skewX;\n    transform.skew.y = -rotation + skewY;\n\n    // next set scale\n    transform.scale.x = Math.sqrt((a * a) + (b * b));\n    transform.scale.y = Math.sqrt((c * c) + (d * d));\n\n    // next set position\n    transform.position.x = matrix.tx + ((pivot.x * matrix.a) + (pivot.y * matrix.c));\n    transform.position.y = matrix.ty + ((pivot.x * matrix.b) + (pivot.y * matrix.d));\n\n    return transform;\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Matrix } from '@pixi/math';\nimport { decomposeTransform } from './decomposeTransform';\n\nimport type { DisplayObject } from '@pixi/display';\n\nconst tempMatrix = new Matrix();\nconst tempParentMatrix = new Matrix();\n\n/**\n * Multiplies the transformation matrix {@code transform} to the display-object's transform.\n *\n * @param displayObject\n * @param transform\n * @param skipUpdate\n */\nexport function multiplyTransform(displayObject: DisplayObject, transform: Matrix, skipUpdate?: boolean): void\n{\n    if (!skipUpdate)\n    {\n        const parent = !displayObject.parent ? displayObject.enableTempParent() : displayObject.parent;\n\n        displayObject.updateTransform();\n        displayObject.disableTempParent(parent);\n    }\n\n    const worldTransform = displayObject.worldTransform;\n    const parentTransform = displayObject.parent\n        ? tempParentMatrix.copyFrom(displayObject.parent.worldTransform)\n        : Matrix.IDENTITY;\n\n    tempMatrix.copyFrom(worldTransform);\n    tempMatrix.prepend(transform);\n    tempMatrix.prepend(parentTransform.invert());// gets new \"local\" transform\n\n    decomposeTransform(displayObject.transform, tempMatrix);\n}\n","/// <reference path=\"./types.d.ts\" />\n\nimport { Renderer } from '@pixi/core';\nimport { DisplayObject, Container } from '@pixi/display';\nimport { Point, Matrix, Transform, Rectangle } from '@pixi/math';\nimport { Graphics } from '@pixi/graphics';\nimport { AxisAlignedBounds, OrientedBounds } from '@pixi-essentials/bounds';\nimport { ObjectPoolFactory } from '@pixi-essentials/object-pool';\nimport { TransformerHandle } from './TransformerHandle';\nimport { createHorizontalSkew, createVerticalSkew } from './utils/skewTransform';\nimport { decomposeTransform } from './utils/decomposeTransform';\nimport { multiplyTransform } from './utils/multiplyTransform';\n\nimport type { InteractionEvent } from '@pixi/interaction';\nimport type { ITransformerHandleStyle } from './TransformerHandle';\n\n// Preallocated objects\nconst tempTransform = new Transform();\nconst tempCorners: [Point, Point, Point, Point] = [new Point(), new Point(), new Point(), new Point()];\nconst tempMatrix = new Matrix();\nconst tempPoint = new Point();\nconst tempBounds = new OrientedBounds();\nconst tempRect = new Rectangle();\nconst tempHull = [new Point(), new Point(), new Point(), new Point()];\nconst tempPointer = new Point();\n\n// Pool for allocating an arbitrary number of points\nconst pointPool = ObjectPoolFactory.build(Point as any);\n\n/**\n * The handles used for rotation.\n *\n * @internal\n * @ignore\n */\ntype RotateHandle = 'rotator';\n\n/**\n * The handles used for scaling.\n *\n * @internal\n * @ignore\n */\ntype ScaleHandle = 'topLeft' |\n    'topCenter' |\n    'topRight' |\n    'middleLeft' |\n    'middleCenter' |\n    'middleRight' |\n    'bottomLeft' |\n    'bottomCenter' |\n    'bottomRight';\n\n/**\n * The handles used for skewing\n *\n * @internal\n * @ignore\n */\ntype SkewHandle = 'skewHorizontal' | 'skewVertical';\n\n/**\n * All the handles provided by {@link Transformer}.\n *\n * @internal\n * @ignore\n */\nexport type Handle = RotateHandle | ScaleHandle | SkewHandle;\n\n/**\n * Specific cursors for each handle\n *\n * @internal\n * @ignore\n */\nconst HANDLE_TO_CURSOR: { [H in Handle]?: string } = {\n    topLeft: 'nw-resize',\n    topCenter: 'n-resize',\n    topRight: 'ne-resize',\n    middleLeft: 'w-resize',\n    middleRight: 'e-resize',\n    bottomLeft: 'sw-resize',\n    bottomCenter: 's-resize',\n    bottomRight: 'se-resize',\n};\n\n/**\n * An array of all {@link ScaleHandle} values.\n *\n * @internal\n * @ignore\n */\nconst SCALE_HANDLES: ScaleHandle[] = [\n    'topLeft',\n    'topCenter',\n    'topRight',\n    'middleLeft',\n    'middleCenter',\n    'middleRight',\n    'bottomLeft',\n    'bottomCenter',\n    'bottomRight',\n];\n\n/**\n * This maps each scaling handle to the directions in which the x, y components are outward. A value of\n * zero means that no scaling occurs along that component's axis.\n *\n * @internal\n * @ignore\n */\nconst SCALE_COMPONENTS: {\n    [H in ScaleHandle]: { x: (-1 | 0 | 1); y: (-1 | 0 | 1) };\n } = {\n     topLeft: { x: -1, y: -1 },\n     topCenter: { x: 0, y: -1 },\n     topRight: { x: 1, y: -1 },\n     middleLeft: { x: -1, y: 0 },\n     middleCenter: { x: 0, y: 0 },\n     middleRight: { x: 1, y: 0 },\n     bottomLeft: { x: -1, y: 1 },\n     bottomCenter: { x: 0, y: 1 },\n     bottomRight: { x: 1, y: 1 },\n };\n\n/**\n * All possible values of {@link Handle}.\n *\n * @ignore\n */\nconst HANDLES = [\n    ...SCALE_HANDLES,\n    'rotator',\n    'skewHorizontal',\n    'skewVertical',\n];\n\n/**\n * The default snap angles for rotation, in radians.\n *\n * @ignore\n */\nconst DEFAULT_ROTATION_SNAPS = [\n    Math.PI / 4,\n    Math.PI / 2,\n    Math.PI * 3 / 4,\n    Math.PI,\n    -Math.PI / 4,\n    -Math.PI / 2,\n    -Math.PI * 3 / 4,\n    -Math.PI,\n];\n\n/**\n * The default snap tolerance, i.e. the maximum angle b/w the pointer & nearest snap ray for snapping.\n *\n * @ignore\n */\nconst DEFAULT_ROTATION_SNAP_TOLERANCE = Math.PI / 90;\n\n/**\n * The default snap angles for skewing, in radians.\n *\n * @ignore\n */\nconst DEFAULT_SKEW_SNAPS = [\n    Math.PI / 4,\n    -Math.PI / 4,\n];\n\n/**\n * The default snap tolerance for skewing.\n *\n * @ignore\n */\nconst DEFAULT_SKEW_SNAP_TOLERANCE = Math.PI / 90;\n\n/**\n * @ignore\n */\nexport interface ITransformerStyle\n{\n    color: number;\n    thickness: number;\n}\n\n/**\n * The default wireframe style for {@link Transformer}.\n *\n * @ignore\n */\nconst DEFAULT_WIREFRAME_STYLE: ITransformerStyle = {\n    color: 0x000000,\n    thickness: 2,\n};\n\n/**\n * @ignore\n */\nexport interface ITransformerOptions\n{\n    centeredScaling: boolean;\n    enabledHandles?: Array<Handle>;\n    group: DisplayObject[];\n    handleConstructor: typeof DisplayObject;\n    handleStyle: Partial<ITransformerHandleStyle>;\n    rotateEnabled?: boolean;\n    rotationSnaps?: number[];\n    rotationSnapTolerance?: number;\n    scaleEnabled?: boolean;\n    skewEnabled?: boolean;\n    skewRadius?: number;\n    skewSnaps?: number[];\n    skewSnapTolerance?: number;\n    translateEnabled?: boolean;\n    transientGroupTilt?: boolean;\n    wireframeStyle: Partial<ITransformerStyle>;\n}\n\n/**\n * {@code Transformer} provides an interactive interface for editing the transforms in a group. It supports translating,\n * scaling, rotating, and skewing display-objects both through interaction and code.\n *\n * A transformer operates in world-space, and it is best to not to position, scale, rotate, or skew one. If you do so, the\n * wireframe itself will not distort (i.e. will adapt _against_ your transforms). However, the wireframe may become\n * thinner/thicker and the handles will scale & rotate. For example, setting `transformer.scale.set(2)` will make the handles\n * twice as big, but will not scale the wireframe (assuming the display-object group itself has not been\n * scaled up).\n *\n * NOTE: The transformer needs to capture all interaction events that would otherwise go to the display-objects in the\n * group. Hence, it must be placed after them in the scene graph.\n */\nexport class Transformer extends Container\n{\n    public group: DisplayObject[];\n\n    public centeredScaling: boolean;\n    public projectionTransform: Matrix;\n    public rotationSnaps: number[];\n    public rotationSnapTolerance: number;\n    public skewRadius: number;\n    public skewSnaps: number[];\n    public skewSnapTolerance: number;\n    public translateEnabled: boolean;\n    public transientGroupTilt: boolean;\n\n    protected groupBounds: OrientedBounds;\n    protected handles: { [H in Handle]: TransformerHandle };\n    protected wireframe: Graphics;\n\n    protected _enabledHandles: Handle[];\n    protected _rotateEnabled: boolean;\n    protected _scaleEnabled: boolean;\n    protected _skewEnabled: boolean;\n    protected _skewX: number;\n    protected _skewY: number;\n    protected _transformType: 'translate' | 'scale' | 'rotate' | 'skew' | 'none';\n    protected _handleStyle: Partial<ITransformerHandleStyle>;\n    protected _wireframeStyle: Partial<ITransformerStyle>;\n\n    private _pointerDown: boolean;\n    private _pointerDragging: boolean;\n    private _pointerPosition: Point;\n\n    /* eslint-disable max-len */\n    /**\n     * | Handle                | Type                     | Notes |\n     * | --------------------- | ------------------------ | ----- |\n     * | rotator               | Rotate                   | |\n     * | topLeft               | Scale                    | |\n     * | topCenter             | Scale                    | |\n     * | topRight              | Scale                    | |\n     * | middleLeft            | Scale                    | |\n     * | middleCenter          | Scale                    | This cannot be enabled!                                             |\n     * | middleRight           | Scale                    | |\n     * | bottomLeft            | Scale                    | |\n     * | bottomCenter          | Scale                    | |\n     * | bottomRight           | Scale                    | |\n     * | skewHorizontal        | Skew                     | Applies vertical shear. Handle segment is horizontal at skew.y = 0! |\n     * | skewVertical          | Skew                     | Applied horizontal shear. Handle segment is vertical at skew.x = 0! |\n     *\n     * @param {object}[options]\n     * @param {DisplayObject[]}[options.group] - the group of display-objects being transformed\n     * @param {boolean}[options.enabledHandles] - specifically define which handles are to be enabled\n     * @param {typeof TransformerHandle}[options.handleConstructor] - a custom transformer-handle class\n     * @param {object}[options.handleStyle] - styling options for the handle. These cannot be modified afterwards!\n     * @param {number}[options.handleStyle.color=0xffffff] - handle color\n     * @param {string}[options.handleStyle.outlineColor=0x000000] - color of the handle outline (stroke)\n     * @param {string}[options.handleStyle.outlineThickness=1] - thickness of the handle outline (stroke)\n     * @param {number}[options.handleStyle.radius=8] - dimensions of the handle\n     * @param {string}[options.handleStyle.shape='tooth'] - 'circle', 'tooth', or 'square'\n     * @param {boolean}[options.handleStyle.scaleInvariant] - whether the handles should not become bigger when the whole scene\n     *  is scaled up.\n     * @param {boolean}[options.rotateEnabled=true] - whether rotate handles are enabled\n     * @param {number[]}[options.rotationSnaps] - the rotation snap angles, in radians. By default, transformer will\n     *      snap for each 1/8th of a revolution.\n     * @param {number}[options.rotationSnapTolerance] - the snap tolerance for rotation in radians\n     * @param {boolean}[options.scaleEnabled=true] - whether scale handles are enabled\n     * @param {boolean}[options.skewEnabled=true] - whether skew handles are enabled\n     * @param {number}[options.skewRadius] - distance of skew handles from center of transformer box\n     *      (`skewTransform` should be enabled)\n     * @param {number[]}[options.skewSnaps] - the skew snap angles, in radians.\n     * @param {number}[options.skewSnapTolerance] - the skew snap tolerance angle.\n     * @param {boolean}[options.translateEnabled=true] - whether dragging the transformer should move the group\n     * @param {boolean}[options.transientGroupTilt=true] - whether the transformer should reset the wireframe's rotation\n     *      after a rotator handle is \"defocused\".\n     * @param {object}[options.wireframeStyle] - styling options for the wireframe.\n     * @param {number}[options.wireframeStyle.color] - color of the lines\n     * @param {number}[options.wireframeStyle.thickness] - thickness of the lines\n     */\n    constructor(options: Partial<ITransformerOptions> = {})\n    {\n    /* eslint-enable max-len */\n        super();\n\n        this.interactive = true;\n        this.cursor = 'move';\n\n        /**\n         * The group of display-objects under transformation.\n         */\n        this.group = options.group || [];\n\n        /**\n         * This will prevent the wireframe's center from shifting on scaling.\n         */\n        this.centeredScaling = !!options.centeredScaling;\n\n        /**\n         * This is used when the display-object group are rendered through a projection transformation (i.e. are disconnected\n         * from the transformer in the scene graph). The transformer project itself into their frame-of-reference using this\n         * transform.\n         *\n         * Specifically, the projection-transform converts points from the group's world space to the transformer's world\n         * space. If you are not applying a projection on the transformer itself, this means it is the group's\n         * world-to-screen transformation.\n         */\n        this.projectionTransform = new Matrix();\n\n        /**\n         * The angles at which rotation should snap.\n         */\n        this.rotationSnaps = options.rotationSnaps || DEFAULT_ROTATION_SNAPS;\n\n        /**\n         * The maximum angular difference for snapping rotation.\n         */\n        this.rotationSnapTolerance = options.rotationSnapTolerance !== undefined\n            ? options.rotationSnapTolerance\n            : DEFAULT_ROTATION_SNAP_TOLERANCE;\n\n        /**\n         * The distance of skewing handles from the group's center.\n         */\n        this.skewRadius = options.skewRadius || 64;\n\n        /**\n         * The angles at which both the horizontal & vertical skew handles should snap.\n         */\n        this.skewSnaps = options.skewSnaps || DEFAULT_SKEW_SNAPS;\n\n        /**\n         * The maximum angular difference for snapping skew handles.\n         */\n        this.skewSnapTolerance = options.skewSnapTolerance !== undefined\n            ? options.skewSnapTolerance\n            : DEFAULT_SKEW_SNAP_TOLERANCE;\n\n        this._rotateEnabled = options.rotateEnabled !== false;\n        this._scaleEnabled = options.scaleEnabled !== false;\n        this._skewEnabled = options.skewEnabled === true;\n\n        /**\n         * This will enable translation on dragging the transformer. By default, it is turned on.\n         *\n         * @default true\n         */\n        this.translateEnabled = options.translateEnabled !== false;\n\n        /**\n         * This will reset the rotation angle after the user finishes rotating a group with more than one display-object.\n         *\n         * @default true\n         */\n        this.transientGroupTilt = options.transientGroupTilt !== undefined ? options.transientGroupTilt : true;\n\n        /**\n         * Draws the bounding boxes\n         */\n        this.wireframe = this.addChild(new Graphics());\n\n        /**\n         * The horizontal skew value. Rotating the group by 𝜽 will also change this value by 𝜽.\n         */\n        this._skewX = 0;\n\n        /**\n         * The vertical skew value. Rotating the group by 𝜽 will also change this value by 𝜽.\n         */\n        this._skewY = 0;\n\n        /**\n         * The current type of transform being applied by the user.\n         */\n        this._transformType = 'none';\n\n        /**\n         * The wireframe style applied on the transformer\n         */\n        this._wireframeStyle = Object.assign({}, DEFAULT_WIREFRAME_STYLE, options.wireframeStyle || {});\n\n        const HandleConstructor = options.handleConstructor || TransformerHandle;\n        const handleStyle = options.handleStyle || {};\n\n        this._handleStyle = handleStyle;\n\n        // Initialize transformer handles\n        const rotatorHandles = {\n            rotator: this.addChild(\n                new HandleConstructor(\n                    'rotator',\n                    handleStyle,\n                    (pointerPosition) =>\n                    {\n                        // The origin is the rotator handle's position, yes.\n                        this.rotateGroup('rotator', pointerPosition);\n                    },\n                    this.commitGroup,\n                )),\n        };\n        const scaleHandles = SCALE_HANDLES.reduce((scaleHandles, handleKey: ScaleHandle) =>\n        {\n            const handleDelta = (pointerPosition: Point): void =>\n            {\n                this.scaleGroup(handleKey as ScaleHandle, pointerPosition);\n            };\n\n            scaleHandles[handleKey] = new HandleConstructor(\n                handleKey,\n                handleStyle,\n                handleDelta,\n                this.commitGroup,\n                HANDLE_TO_CURSOR[handleKey]);\n            scaleHandles[handleKey].visible = this._scaleEnabled;\n            this.addChild(scaleHandles[handleKey]);\n\n            return scaleHandles;\n        }, {});\n        const skewHandles = {\n            skewHorizontal: this.addChild(\n                new HandleConstructor(\n                    'skewHorizontal',\n                    handleStyle,\n                    (pointerPosition: Point) => { this.skewGroup('skewHorizontal', pointerPosition); },\n                    this.commitGroup,\n                    'pointer',\n                )),\n            skewVertical: this.addChild(\n                new HandleConstructor(\n                    'skewVertical',\n                    handleStyle,\n                    (pointerPosition: Point) => { this.skewGroup('skewVertical', pointerPosition); },\n                    this.commitGroup,\n                    'pointer',\n                )),\n        };\n\n        /**\n         * Object mapping handle-names to the handle display-objects.\n         */\n        this.handles = Object.assign({}, rotatorHandles, scaleHandles, skewHandles) as { [H in Handle]: TransformerHandle };\n        this.handles.middleCenter.visible = false;\n        this.handles.skewHorizontal.visible = this._skewEnabled;\n        this.handles.skewVertical.visible = this._skewEnabled;\n\n        // Update groupBounds immediately. This is because mouse events can propagate before the next animation frame.\n        this.groupBounds = new OrientedBounds();\n        this.updateGroupBounds();\n\n        // Pointer events\n        this._pointerDown = false;\n        this._pointerDragging = false;\n        this._pointerPosition = new Point();\n        this.on('pointerdown', this.onPointerDown, this);\n        this.on('pointermove', this.onPointerMove, this);\n        this.on('pointerup', this.onPointerUp, this);\n        this.on('pointerupoutside', this.onPointerUp, this);\n    }\n\n    /**\n     * The list of enabled handles, if applied manually.\n     */\n    get enabledHandles(): Array<Handle>\n    {\n        return this._enabledHandles;\n    }\n    set enabledHandles(value: Array<Handle>)\n    {\n        if (!this._enabledHandles && !value)\n        {\n            return;\n        }\n\n        this._enabledHandles = value;\n\n        HANDLES.forEach((handleKey) => { this.handles[handleKey].visible = false; });\n\n        if (value)\n        {\n            value.forEach((handleKey) => { this.handles[handleKey].visible = true; });\n        }\n        else\n        {\n            this.handles.rotator.visible = this._rotateEnabled;\n            this.handles.skewHorizontal.visible = this._skewEnabled;\n            this.handles.skewVertical.visible = this._skewEnabled;\n\n            SCALE_HANDLES.forEach((handleKey) =>\n            {\n                if (handleKey === 'middleCenter') return;\n\n                this.handles[handleKey].visible = this._scaleEnabled;\n            });\n        }\n    }\n\n    /**\n     * The currently applied handle style. If you have edited the transformer handles directly, this may be inaccurate.\n     */\n    get handleStyle(): Partial<ITransformerHandleStyle>\n    {\n        return this._handleStyle;\n    }\n    set handleStyle(value: Partial<ITransformerHandleStyle>)\n    {\n        const handles = this.handles;\n\n        for (const handleKey in handles)\n        {\n            (handles[handleKey] as TransformerHandle).style = value;\n        }\n\n        this._handleStyle = value;\n    }\n\n    /**\n     * This will enable the rotate handles.\n     */\n    get rotateEnabled(): boolean\n    {\n        return this._rotateEnabled;\n    }\n    set rotateEnabled(value: boolean)\n    {\n        if (!this._rotateEnabled !== value)\n        {\n            this._rotateEnabled = value;\n\n            if (this._enabledHandles)\n            {\n                return;\n            }\n\n            this.handles.rotator.visible = value;\n        }\n    }\n\n    /**\n     * This will enable the scale handles.\n     */\n    get scaleEnabled(): boolean\n    {\n        return this._scaleEnabled;\n    }\n    set scaleEnabled(value: boolean)\n    {\n        if (!this._scaleEnabled !== value)\n        {\n            this._scaleEnabled = value;\n\n            if (this._enabledHandles)\n            {\n                return;\n            }\n\n            SCALE_HANDLES.forEach((handleKey) =>\n            {\n                if (handleKey === 'middleCenter')\n                {\n                    return;\n                }\n\n                this.handles[handleKey].visible = value;\n            });\n        }\n    }\n\n    /**\n     * This will enable the skew handles.\n     */\n    get skewEnabled(): boolean\n    {\n        return this._skewEnabled;\n    }\n    set skewEnabled(value: boolean)\n    {\n        if (this._skewEnabled !== value)\n        {\n            this._skewEnabled = value;\n\n            if (this._enabledHandles)\n            {\n                return;\n            }\n\n            this.handles.skewHorizontal.visible = value;\n            this.handles.skewVertical.visible = value;\n        }\n    }\n\n    /**\n     * This is the type of transformation being applied by the user on the group. It can be inaccurate if you call one of\n     * `translateGroup`, `scaleGroup`, `rotateGroup`, `skewGroup` without calling `commitGroup` afterwards.\n     *\n     * @readonly\n     */\n    get transformType(): 'translate' | 'scale' | 'rotate' | 'skew' | 'none'\n    {\n        return this._transformType;\n    }\n\n    /**\n     * The currently applied wireframe style.\n     */\n    get wireframeStyle(): Partial<ITransformerStyle>\n    {\n        return this._wireframeStyle;\n    }\n    set wireframeStyle(value: Partial<ITransformerStyle>)\n    {\n        this._wireframeStyle = Object.assign({}, DEFAULT_WIREFRAME_STYLE, value);\n    }\n\n    /**\n     * @param forceUpdate - forces a recalculation of the group bounds\n     * @returns the oriented bounding box of the wireframe\n     */\n    getGroupBounds(forceUpdate = false): OrientedBounds\n    {\n        if (forceUpdate)\n        {\n            this.updateGroupBounds();\n        }\n\n        return this.groupBounds;\n    }\n\n    /**\n     * This will translate the group by {@code delta} in their world-space.\n     *\n     * NOTE: There is no handle that provides translation. The user drags the transformer directly.\n     *\n     * @param delta\n     */\n    translateGroup = (delta: Point): void =>\n    {\n        this._transformType = 'translate';\n\n        // Translation matrix\n        const matrix = tempMatrix\n            .identity()\n            .translate(delta.x, delta.y);\n\n        this.prependTransform(matrix);\n    };\n\n    /**\n     * This will rotate the group such that the handle will come to {@code pointerPosition}.\n     *\n     * @param handle - the rotator handle was dragged\n     * @param pointerPosition - the new pointer position, in screen space\n     */\n    rotateGroup = (handle: RotateHandle, pointerPosition: Point): void =>\n    {\n        this._transformType = 'rotate';\n\n        const bounds = this.groupBounds;\n        const handlePosition = this.worldTransform.apply(this.handles[handle].position, tempPoint);\n\n        this.projectionTransform.applyInverse(handlePosition, handlePosition);\n        pointerPosition = this.projectionTransform.applyInverse(pointerPosition, tempPointer);\n\n        // Center of rotation - does not change in transformation\n        const rOrigin = bounds.center;\n\n        // Original tilt\n        const orgAngle = Math.atan2(handlePosition.y - rOrigin.y, handlePosition.x - rOrigin.x);\n        // Final tilt\n        const dstAngle = Math.atan2(pointerPosition.y - rOrigin.y, pointerPosition.x - rOrigin.x);\n        // The angle by which bounds should be rotated\n        let deltaAngle = dstAngle - orgAngle;\n\n        // Snap\n        let newRotation = this.groupBounds.rotation + deltaAngle;\n\n        newRotation = this.snapAngle(newRotation, this.rotationSnapTolerance, this.rotationSnaps);\n        deltaAngle = newRotation - this.groupBounds.rotation;\n\n        // Rotation matrix\n        const matrix = tempMatrix\n            .identity()\n            .translate(-rOrigin.x, -rOrigin.y)\n            .rotate(deltaAngle)\n            .translate(rOrigin.x, rOrigin.y);\n\n        this.prependTransform(matrix, true);\n        this.updateGroupBounds(newRotation);\n\n        // Rotation moves both skew.x & skew.y\n        this._skewX += deltaAngle;\n        this._skewY += deltaAngle;\n    };\n\n    /**\n     * This will scale the group such that the scale handle will come under {@code pointerPosition}.\n     *\n     * @param handle - the scaling handle that was dragged\n     * @param pointerPosition - the new pointer position, in screen space\n     */\n    scaleGroup = (handle: ScaleHandle, pointerPosition: Point): void =>\n    {\n        this._transformType = 'scale';\n\n        // Directions along x,y axes that will produce positive scaling\n        const xDir = SCALE_COMPONENTS[handle].x;\n        const yDir = SCALE_COMPONENTS[handle].y;\n\n        const bounds = this.groupBounds;\n        const angle = bounds.rotation;\n        const innerBounds = bounds.innerBounds;\n\n        // Position of handle in the group's world-space\n        const handlePosition = this.worldTransform.apply(this.handles[handle].position, tempPoint);\n\n        this.projectionTransform.applyInverse(handlePosition, handlePosition);\n        pointerPosition = this.projectionTransform.applyInverse(pointerPosition, tempPointer);\n\n        // Delta vector in world frame\n        const dx = pointerPosition.x - handlePosition.x;\n        const dy = pointerPosition.y - handlePosition.y;\n\n        // Unit vector along u-axis (horizontal axis after rotation) of bounds\n        const uxvec = (bounds.topRight.x - bounds.topLeft.x) / innerBounds.width;\n        const uyvec = (bounds.topRight.y - bounds.topLeft.y) / innerBounds.width;\n\n        // Unit vector along v-axis (vertical axis after rotation) of bounds\n        const vxvec = (bounds.bottomLeft.x - bounds.topLeft.x) / innerBounds.height;\n        const vyvec = (bounds.bottomLeft.y - bounds.topLeft.y) / innerBounds.height;\n\n        // Delta vector in rotated frame of bounds\n        const du = (dx * uxvec) + (dy * uyvec);\n        const dv = (dx * vxvec) + (dy * vyvec);\n\n        // Scaling factors along x,y axes\n        const sx = 1 + (du * xDir / innerBounds.width);\n        const sy = 1 + (dv * yDir / innerBounds.height);\n\n        const matrix = tempMatrix.identity();\n\n        if (xDir !== 0)\n        {\n            // Origin of horizontal scaling - a point which does not move after applying the transform\n            // eslint-disable-next-line no-nested-ternary\n            const hsOrigin = !this.centeredScaling ? (xDir === 1 ? bounds.topLeft : bounds.topRight) : bounds.center;\n\n            matrix.translate(-hsOrigin.x, -hsOrigin.y)\n                .rotate(-angle)\n                .scale(sx, 1)\n                .rotate(angle)\n                .translate(hsOrigin.x, hsOrigin.y);\n        }\n\n        if (yDir !== 0)\n        {\n            // Origin of vertical scaling - a point which does not move after applying the transform\n            // eslint-disable-next-line no-nested-ternary\n            const vsOrigin = !this.centeredScaling ? (yDir === 1 ? bounds.topLeft : bounds.bottomLeft) : bounds.center;\n\n            matrix.translate(-vsOrigin.x, -vsOrigin.y)\n                .rotate(-angle)\n                .scale(1, sy)\n                .rotate(angle)\n                .translate(vsOrigin.x, vsOrigin.y);\n        }\n\n        this.prependTransform(matrix);\n    };\n\n    /**\n     * This will skew the group such that the skew handle would move to the {@code pointerPosition}.\n     *\n     * @param handle\n     * @param pointerPosition - pointer position, in screen space\n     */\n    skewGroup = (handle: SkewHandle, pointerPosition: Point): void =>\n    {\n        this._transformType = 'skew';\n\n        const bounds = this.groupBounds;\n\n        // Destination point\n        const dst = tempPoint.copyFrom(pointerPosition);\n\n        this.projectionTransform.applyInverse(dst, dst);\n\n        // Center of skew (same as center of rotation!)\n        const sOrigin = bounds.center;\n\n        // Skew matrix\n        const matrix = tempMatrix.identity()\n            .translate(-sOrigin.x, -sOrigin.y);\n        let rotation = this.groupBounds.rotation;\n\n        if (handle === 'skewHorizontal')\n        {\n            const oldSkew = this._skewX;\n\n            // Calculate new skew\n            this._skewX = Math.atan2(dst.y - sOrigin.y, dst.x - sOrigin.x);\n            this._skewX = this.snapAngle(this._skewX, this.skewSnapTolerance, this.skewSnaps);\n\n            // Skew by new skew.x\n            matrix.prepend(createVerticalSkew(-oldSkew));\n            matrix.prepend(createVerticalSkew(this._skewX));\n        }\n        else // skewVertical\n        {\n            const oldSkew = this._skewY;\n\n            // Calculate new skew\n            const newSkew = Math.atan2(dst.y - sOrigin.y, dst.x - sOrigin.x) - (Math.PI / 2);\n\n            this._skewY = newSkew;\n            this._skewY = this.snapAngle(this._skewY, this.skewSnapTolerance, this.skewSnaps);\n\n            // HINT: skewY is applied negatively b/c y-axis is flipped\n            matrix.prepend(createHorizontalSkew(oldSkew));\n            matrix.prepend(createHorizontalSkew(-this._skewY));\n\n            rotation -= this._skewY - oldSkew;\n        }\n\n        matrix.translate(sOrigin.x, sOrigin.y);\n\n        this.prependTransform(matrix, true);\n        this.updateGroupBounds(rotation);\n    };\n\n    /**\n     * This is called after the user finishes dragging a handle. If {@link this.transientGroupTilt} is enabled, it will\n     * reset the rotation of this group (if more than one display-object is grouped).\n     */\n    commitGroup = (): void =>\n    {\n        this._transformType = 'none';\n\n        if (this.transientGroupTilt !== false && this.group.length > 1)\n        {\n            this.updateGroupBounds(0);\n        }\n\n        this.emit('transformcommit');\n    };\n\n    /**\n     * This will update the transformer's geometry and render it to the canvas.\n     *\n     * @override\n     * @param renderer\n     */\n    render(renderer: Renderer): void\n    {\n        this.draw();\n\n        super.render(renderer);\n    }\n\n    /**\n     * Recalculates the transformer's geometry. This is called on each render.\n     */\n    protected draw(): void\n    {\n        const targets = this.group;\n        const { color, thickness } = this._wireframeStyle;\n\n        // Updates occur right here!\n        this.wireframe.clear()\n            .lineStyle(thickness, color);\n\n        for (let i = 0, j = targets.length; i < j; i++)\n        {\n            this.drawBounds(Transformer.calculateOrientedBounds(targets[i], tempBounds));\n        }\n\n        // groupBounds may change on each render-loop b/c of any ongoing animation\n        const groupBounds = targets.length !== 1\n            ? Transformer.calculateGroupOrientedBounds(targets, this.groupBounds.rotation, tempBounds, true)\n            : Transformer.calculateOrientedBounds(targets[0], tempBounds);// Auto-detect rotation\n\n        // Redraw skeleton and position handles\n        this.drawBounds(groupBounds);\n        this.drawHandles(groupBounds);\n\n        // Update cached groupBounds\n        this.groupBounds.copyFrom(groupBounds);\n    }\n\n    /**\n     * Draws the bounding box into {@code this.wireframe}.\n     *\n     * @param bounds\n     */\n    protected drawBounds(bounds: OrientedBounds | AxisAlignedBounds): void\n    {\n        const hull = tempHull;\n\n        // Bring hull into local-space\n        for (let i = 0; i < 4; i++)\n        {\n            this.toTransformerLocal(bounds.hull[i], hull[i]);\n        }\n\n        // Fill polygon with ultra-low alpha to capture pointer events.\n        this.wireframe\n            .beginFill(0xffffff, 1e-4)\n            .drawPolygon(hull)\n            .endFill();\n    }\n\n    /**\n     * Draw the handles and any remaining parts of the wireframe.\n     *\n     * @param groupBounds\n     */\n    protected drawHandles(groupBounds: OrientedBounds): void\n    {\n        const handles = this.handles;\n        const {\n            topLeft: worldTopLeft,\n            topRight: worldTopRight,\n            bottomLeft: worldBottomLeft,\n            bottomRight: worldBottomRight,\n            center: worldCenter,\n        } = groupBounds;\n\n        const [topLeft, topRight, bottomLeft, bottomRight] = tempHull;\n        const center = tempPoint;\n\n        this.toTransformerLocal(worldTopLeft, topLeft);\n        this.toTransformerLocal(worldTopRight, topRight);\n        this.toTransformerLocal(worldBottomLeft, bottomLeft);\n        this.toTransformerLocal(worldBottomRight, bottomRight);\n        this.toTransformerLocal(worldCenter, center);\n\n        if (this._rotateEnabled)\n        {\n            // Midpoint from topLeft to topRight\n            const bx = (topLeft.x + topRight.x) / 2;\n            const by = (topLeft.y + topRight.y) / 2;\n\n            // Vector perpendicular to <bx,by>.\n            let px = -(topLeft.y - topRight.y);\n            let py = (topLeft.x - topRight.x);\n\n            // Normalize <px,py> to 32 units.\n            const pl = Math.sqrt((px * px) + (py * py));\n\n            px *= 32 / pl;\n            py *= 32 / pl;\n\n            handles.rotator.position.x = bx + px;\n            handles.rotator.position.y = by + py;\n\n            this.wireframe.moveTo(bx, by)\n                .lineTo(handles.rotator.position.x, handles.rotator.position.y);\n        }\n\n        if (this._scaleEnabled)\n        {\n            // Scale handles\n            handles.topLeft.position.copyFrom(topLeft);\n            handles.topCenter.position.set((topLeft.x + topRight.x) / 2, (topLeft.y + topRight.y) / 2);\n            handles.topRight.position.copyFrom(topRight);\n            handles.middleLeft.position.set((topLeft.x + bottomLeft.x) / 2, (topLeft.y + bottomLeft.y) / 2);\n            handles.middleCenter.position.set((topLeft.x + bottomRight.x) / 2, (topLeft.y + bottomRight.y) / 2);\n            handles.middleRight.position.set((topRight.x + bottomRight.x) / 2, (topRight.y + bottomRight.y) / 2);\n            handles.bottomLeft.position.copyFrom(bottomLeft);\n            handles.bottomCenter.position.set((bottomLeft.x + bottomRight.x) / 2, (bottomLeft.y + bottomRight.y) / 2);\n            handles.bottomRight.position.copyFrom(bottomRight);\n        }\n\n        if (this._skewEnabled)\n        {\n            const cx = center.x;\n            const cy = center.y;\n\n            // Transform center into screen space\n            this.worldTransform.apply(center, center);\n\n            // Calculate skew handle positions in screen space, and then transform back into local-space. This ensures that\n            // the handles appear at skewRadius distance, regardless of the projection.\n            handles.skewHorizontal.position.set(\n                center.x + (Math.cos(this._skewX) * this.skewRadius),\n                center.y + (Math.sin(this._skewX) * this.skewRadius));\n            handles.skewVertical.position.set( // HINT: Slope = skew.y + Math.PI / 2\n                center.x + (-Math.sin(this._skewY) * this.skewRadius),\n                center.y + (Math.cos(this._skewY) * this.skewRadius));\n            this.worldTransform.applyInverse(handles.skewHorizontal.position, handles.skewHorizontal.position);\n            this.worldTransform.applyInverse(handles.skewVertical.position, handles.skewVertical.position);\n\n            // Restore center to local-space\n            center.set(cx, cy);\n\n            this.wireframe\n                .beginFill(this.wireframeStyle.color)\n                .drawCircle(center.x, center.y, this.wireframeStyle.thickness * 2)\n                .endFill();\n            this.wireframe\n                .moveTo(center.x, center.y)\n                .lineTo(handles.skewHorizontal.x, handles.skewHorizontal.y)\n                .moveTo(center.x, center.y)\n                .lineTo(handles.skewVertical.x, handles.skewVertical.y);\n        }\n\n        // Update transforms\n        for (const handleName in handles)\n        {\n            let rotation = this.groupBounds.rotation;\n\n            if (handleName === 'skewHorizontal')\n            {\n                rotation = this._skewX;\n            }\n            else if (handleName === 'skewVertical')\n            {\n                rotation = this._skewY;\n            }\n\n            const handle: TransformerHandle = handles[handleName];\n\n            handle.rotation = rotation;\n            handle.getBounds(false, tempRect);\n        }\n    }\n\n    /**\n     * Called on the `pointerdown` event. You must call the super implementation.\n     *\n     * @param e\n     */\n    protected onPointerDown(e: InteractionEvent): void\n    {\n        this._pointerDown = true;\n        this._pointerDragging = false;\n\n        e.stopPropagation();\n    }\n\n    /**\n     * Called on the `pointermove` event. You must call the super implementation.\n     *\n     * @param e\n     */\n    protected onPointerMove(e: InteractionEvent): void\n    {\n        if (!this._pointerDown)\n        {\n            return;\n        }\n\n        const lastPointerPosition = this._pointerPosition;\n        const currentPointerPosition = tempPoint.copyFrom(e.data.global);\n\n        const cx = currentPointerPosition.x;\n        const cy = currentPointerPosition.y;\n\n        // Translate group by difference\n        if (this._pointerDragging && this.translateEnabled)\n        {\n            const [worldOrigin, worldDestination, worldDelta] = tempHull;\n\n            // HINT: The pointer has moved from lastPointerPosition to currentPointerPosition in the transformer's\n            // world space. However, we want to translate the display-object's in their world space; to do this,\n            // we project (0,0) and the delta into their world-space, and take the difference.\n            worldOrigin.set(0, 0);\n            worldDestination.set(\n                currentPointerPosition.x - lastPointerPosition.x,\n                currentPointerPosition.y - lastPointerPosition.y);\n            this.projectionTransform.applyInverse(worldOrigin, worldOrigin);\n            this.projectionTransform.applyInverse(worldDestination, worldDestination);\n\n            worldDelta.set(worldDestination.x - worldOrigin.x, worldDestination.y - worldOrigin.y);\n\n            this.translateGroup(worldDelta);\n        }\n\n        this._pointerPosition.x = cx;\n        this._pointerPosition.y = cy;\n        this._pointerDragging = true;\n\n        e.stopPropagation();\n    }\n\n    /**\n     * Called on the `pointerup` and `pointerupoutside` events. You must call the super implementation.\n     *\n     * @param e\n     */\n    protected onPointerUp(e: InteractionEvent): void\n    {\n        this._pointerDragging = false;\n        this._pointerDown = false;\n\n        e.stopPropagation();\n    }\n\n    /**\n     * Applies the given transformation matrix {@code delta} to all the display-objects in the group.\n     *\n     * @param delta - transformation matrix\n     * @param skipUpdate - whether to skip updating the group-bounds after applying the transform\n     */\n    private prependTransform(delta: Matrix, skipUpdate = false): void\n    {\n        const group = this.group;\n\n        for (let i = 0, j = group.length; i < j; i++)\n        {\n            multiplyTransform(group[i], delta, false);\n        }\n\n        if (!skipUpdate)\n        {\n            this.updateGroupBounds();\n        }\n\n        this.emit('transformchange', delta);\n    }\n\n    /**\n     * Recalculates {@code this.groupBounds} at the same angle.\n     *\n     * @param rotation - override the group's rotation\n     */\n    private updateGroupBounds(rotation: number = this.groupBounds.rotation): void\n    {\n        Transformer.calculateGroupOrientedBounds(this.group, rotation, this.groupBounds);\n    }\n\n    /**\n     * Snaps the given {@code angle} to one of the snapping angles, if possible.\n     *\n     * @param angle - the input angle\n     * @param snapTolerance - the maximum difference b/w the given angle & a snapping angle\n     * @param snaps - the snapping angles\n     * @returns the snapped angle\n     */\n    private snapAngle(angle: number, snapTolerance: number, snaps?: number[]): number\n    {\n        angle = angle % (Math.PI * 2);\n\n        if (!snaps || snaps.length === 1 || !snapTolerance)\n        {\n            return angle;\n        }\n\n        for (let i = 0, j = snaps.length; i < j; i++)\n        {\n            if (Math.abs(angle - snaps[i]) <= snapTolerance)\n            {\n                return snaps[i];\n            }\n        }\n\n        return angle;\n    }\n\n    /**\n     * Transforms {@code input} from the group's world space into the transformer's local space, and puts the result\n     * into {@code output}.\n     *\n     * @param input\n     * @param output\n     * @returns the output\n     */\n    private toTransformerLocal(input: Point, output: Point): Point\n    {\n        this.projectionTransform.apply(input, output);\n        this.worldTransform.applyInverse(output, output);\n\n        return output;\n    }\n\n    /**\n     * Calculates the positions of the four corners of the display-object. The quadrilateral formed by\n     * these points will be the tightest fit around it.\n     *\n     * @param displayObject - The display object whose corners are to be calculated\n     * @param transform - The transform applied on the display-object. By default, this is its world-transform\n     * @param corners - Optional array of four points to put the result into\n     * @param index - Optional index into \"corners\"\n     * @returns an array of four points holding the positions of the corners\n     */\n    static calculateTransformedCorners(\n        displayObject: DisplayObject,\n        transform: Matrix = displayObject.worldTransform,\n        corners?: Point[],\n        index = 0,\n    ): Point[]\n    {\n        const localBounds = displayObject.getLocalBounds();\n\n        // Don't modify transforms\n        displayObject.getBounds();\n\n        corners = corners || [new Point(), new Point(), new Point(), new Point()];\n        corners[index].set(localBounds.x, localBounds.y);\n        corners[index + 1].set(localBounds.x + localBounds.width, localBounds.y);\n        corners[index + 2].set(localBounds.x + localBounds.width, localBounds.y + localBounds.height);\n        corners[index + 3].set(localBounds.x, localBounds.y + localBounds.height);\n\n        transform.apply(corners[index], corners[index]);\n        transform.apply(corners[index + 1], corners[index + 1]);\n        transform.apply(corners[index + 2], corners[index + 2]);\n        transform.apply(corners[index + 3], corners[index + 3]);\n\n        return corners;\n    }\n\n    /**\n     * Calculates the oriented bounding box of the display-object. This would not bending with any skew\n     * applied on the display-object, i.e. it is guaranteed to be rectangular.\n     *\n     * @param displayObject\n     * @param bounds - the bounds instance to set\n     */\n    static calculateOrientedBounds(displayObject: DisplayObject, bounds?: OrientedBounds): OrientedBounds\n    {\n        const parent = !displayObject.parent ? displayObject.enableTempParent() : displayObject.parent;\n\n        displayObject.updateTransform();\n        displayObject.disableTempParent(parent);\n\n        // Decompose displayObject.worldTransform to get its (world) rotation\n        decomposeTransform(tempTransform, displayObject.worldTransform);\n\n        tempTransform.updateLocalTransform();\n\n        const angle = tempTransform.rotation;\n        const corners = Transformer.calculateTransformedCorners(displayObject, displayObject.worldTransform, tempCorners);\n\n        // Calculate centroid, which is our center of rotation\n        const cx = (corners[0].x + corners[1].x + corners[2].x + corners[3].x) / 4;\n        const cy = (corners[0].y + corners[1].y + corners[2].y + corners[3].y) / 4;\n\n        // Unrotation matrix\n        const matrix = tempMatrix\n            .identity()\n            .translate(-cx, -cy)\n            .rotate(-tempTransform.rotation)\n            .translate(cx, cy);\n\n        // Calculate unrotated corners\n        matrix.apply(corners[0], corners[0]);\n        matrix.apply(corners[1], corners[1]);\n        matrix.apply(corners[2], corners[2]);\n        matrix.apply(corners[3], corners[3]);\n\n        bounds = bounds || new OrientedBounds();\n        bounds.rotation = angle;\n        bounds.innerBounds.x = Math.min(corners[0].x, corners[1].x, corners[2].x, corners[3].x);\n        bounds.innerBounds.y = Math.min(corners[0].y, corners[1].y, corners[2].y, corners[3].y);\n        bounds.innerBounds.width = Math.max(corners[0].x, corners[1].x, corners[2].x, corners[3].x) - bounds.innerBounds.x;\n        bounds.innerBounds.height = Math.max(corners[0].y, corners[1].y, corners[2].y, corners[3].y) - bounds.innerBounds.y;\n\n        return bounds;\n    }\n\n    /**\n     * Calculates the oriented bounding box of a group of display-objects at a specific angle.\n     *\n     * @param group\n     * @param rotation\n     * @param bounds\n     * @param skipUpdate\n     */\n    static calculateGroupOrientedBounds(\n        group: DisplayObject[],\n        rotation: number,\n        bounds?: OrientedBounds,\n        skipUpdate = false,\n    ): OrientedBounds\n    {\n        const groupLength = group.length;\n        const frames = pointPool.allocateArray(groupLength * 4);// Zero allocations!\n\n        // Calculate display-object frame vertices\n        for (let i = 0; i < groupLength; i++)\n        {\n            const displayObject = group[i];\n\n            // Update worldTransform\n            if (!skipUpdate)\n            {\n                const parent = !displayObject.parent ? displayObject.enableTempParent() : displayObject.parent;\n\n                displayObject.updateTransform();\n                displayObject.disableTempParent(parent);\n            }\n\n            Transformer.calculateTransformedCorners(displayObject, displayObject.worldTransform, frames, i * 4);\n        }\n\n        // Unrotation matrix\n        const matrix = tempMatrix\n            .identity()\n            .rotate(-rotation);\n        let minX = Number.MAX_VALUE;\n        let minY = Number.MAX_VALUE;\n        let maxX = -Number.MAX_VALUE;\n        let maxY = -Number.MAX_VALUE;\n\n        // Unrotate all frame vertices, calculate minX, minY, maxX, maxY for innerBounds\n        for (let i = 0, j = frames.length; i < j; i++)\n        {\n            const point = frames[i];\n\n            matrix.apply(point, point);\n\n            const x = point.x;\n            const y = point.y;\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        pointPool.releaseArray(frames);\n\n        bounds = bounds || new OrientedBounds();\n        bounds.innerBounds.x = minX;\n        bounds.innerBounds.y = minY;\n        bounds.innerBounds.width = maxX - minX;\n        bounds.innerBounds.height = maxY - minY;\n        bounds.rotation = rotation;\n\n        matrix.applyInverse(bounds.center, tempPoint);\n        bounds.center.copyFrom(tempPoint);\n\n        return bounds;\n    }\n}\n\n/**\n * This is fired when the transformer modifies the transforms of display-objects.\n *\n * @event Transformer#transformchange\n * @type {Matrix}\n */\n\n/**\n * This is fired when the user lifts the mouse button after dragging a transformer handle. It can be used\n *\n * @event Transformer#transformcommit\n */\n","// This will ensure the InteractionTarget mixin is applied on DisplayObject.\nimport '@pixi/interaction';\n\nexport { Transformer } from './Transformer';\nexport { TransformerHandle } from './TransformerHandle';\n\nexport type { ITransformerOptions, ITransformerStyle } from './Transformer';\nexport type { ITransformerHandleStyle } from './TransformerHandle';\n"],"names":["Point","Graphics","Matrix","tempMatrix","Transform","OrientedBounds","Rectangle","ObjectPoolFactory","bounds","Container"],"mappings":"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"}