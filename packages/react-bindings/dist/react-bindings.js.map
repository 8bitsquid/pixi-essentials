{"version":3,"file":"react-bindings.js","sources":["../src/utils/applyEventProps.ts","../src/Transformer.ts"],"sourcesContent":["import type { DisplayObject } from '@pixi/display';\n\n/**\n * Removes old listeners and applies the new ones passed in the props\n *\n * @param displayObject - display-object emitting events\n * @param events - object mapping handler prop-names to the fired events\n * @param oldProps - old props. If calling on first props being passed, this should be `{}`.\n * @param newProps - new props.\n */\nexport function applyEventProps(\n    displayObject: DisplayObject,\n    events: Record<string, string>,\n    oldProps: any,\n    newProps: any,\n): void\n{\n    for (const handlerName in events)\n    {\n        const oldHandler = oldProps[handlerName];\n        const newHandler = newProps[handlerName];\n        const event = events[handlerName];\n\n        if (oldHandler !== newHandler)\n        {\n            if (oldHandler)\n            {\n                displayObject.off(event, oldHandler);\n            }\n\n            if (newHandler)\n            {\n                displayObject.on(event, newHandler);\n            }\n        }\n    }\n}\n","import { DisplayObject } from '@pixi/display';\nimport { Matrix } from '@pixi/math';\nimport { PixiComponent } from '@inlet/react-pixi';\nimport { Transformer as TransformerImpl, TransformerHandle as TransformerHandleImpl } from '@pixi-essentials/transformer';\nimport { applyEventProps } from './utils/applyEventProps';\n\nimport type { ITransformerStyle, ITransformerHandleStyle } from '@pixi-essentials/transformer';\nimport type React from 'react';\n\nconst EMPTY: any = {};\n\nconst IDENTITY_MATRIX = Matrix.IDENTITY;// Prevent reinstantation each time\n\n/**\n * @internal\n */\nexport type TransformerProps = {\n    centeredScaling?: boolean;\n    enabledHandles?: Array<string>;\n    group?: DisplayObject[];\n    handleConstructor?: typeof TransformerHandleImpl;\n    handleStyle?: Partial<ITransformerHandleStyle>;\n    projectionTransform?: Matrix;\n    rotateEnabled?: boolean;\n    rotationSnaps?: number[];\n    rotationSnapTolerance?: number;\n    scaleEnabled?: boolean;\n    skewEnabled?: boolean;\n    skewRadius?: number;\n    skewSnaps?: number[];\n    skewSnapTolerance?: number;\n    translateEnabled?: boolean;\n    transientGroupTilt?: boolean;\n    transformchange?: () => void;\n    wireframeStyle?: Partial<ITransformerStyle>;\n};\n\n/**\n * @ignore\n */\nconst HANDLER_TO_EVENT = {\n    transformchange: 'transformchange',\n    transformcommit: 'transformcommit',\n};\n\n/**\n * Transformer component\n *\n * @see https://github.com/SukantPal/pixi-essentials/tree/master/packages/transformer\n */\nexport const Transformer: React.FC<TransformerProps> = PixiComponent<TransformerProps, TransformerImpl>('Transformer', {\n    create: (props: TransformerProps): TransformerImpl => new TransformerImpl(props as any),\n    applyProps(instance: TransformerImpl, oldProps: TransformerProps, newProps: TransformerProps): void\n    {\n        applyEventProps(instance, HANDLER_TO_EVENT, oldProps, newProps);\n\n        instance.group = newProps.group || [];\n\n        instance.centeredScaling = newProps.centeredScaling;\n        instance.enabledHandles = newProps.enabledHandles as any;\n        instance.projectionTransform.copyFrom(newProps.projectionTransform || IDENTITY_MATRIX);\n        instance.skewRadius = newProps.skewRadius || instance.skewRadius;\n        instance.rotateEnabled = newProps.rotateEnabled !== false;\n        instance.scaleEnabled = newProps.scaleEnabled !== false;\n        instance.skewEnabled = newProps.skewEnabled === true;\n        instance.translateEnabled = newProps.translateEnabled !== false;\n        instance.transientGroupTilt = newProps.transientGroupTilt;\n\n        if (oldProps.handleConstructor !== newProps.handleConstructor)\n        {\n            throw new Error('Transformer does not support changing the TransformerHandleConstructor!');\n        }\n\n        if (oldProps.rotationSnaps !== newProps.rotationSnaps)\n        {\n            instance.rotationSnaps = newProps.rotationSnaps;\n        }\n        if (oldProps.rotationSnapTolerance !== newProps.rotationSnapTolerance)\n        {\n            instance.rotationSnapTolerance = newProps.rotationSnapTolerance;\n        }\n        if (oldProps.skewSnaps !== newProps.skewSnaps)\n        {\n            instance.skewSnaps = newProps.skewSnaps;\n        }\n        if (oldProps.skewSnapTolerance !== newProps.skewSnapTolerance)\n        {\n            instance.skewSnapTolerance = newProps.skewSnapTolerance;\n        }\n\n        const oldHandleStyle = oldProps.handleStyle || EMPTY;\n        const newHandleStyle = newProps.handleStyle || EMPTY;\n\n        if (oldHandleStyle.color !== newHandleStyle.color\n                || oldHandleStyle.outlineColor !== newHandleStyle.outlineColor\n                || oldHandleStyle.outlineThickness !== newHandleStyle.outlineThickness\n                || oldHandleStyle.radius !== newHandleStyle.radius\n                || oldHandleStyle.shape !== newHandleStyle.shape)\n        {\n            instance.handleStyle = newHandleStyle;\n        }\n\n        const oldWireframeStyle = oldProps.wireframeStyle || EMPTY;\n        const newWireframeStyle = newProps.wireframeStyle || EMPTY;\n\n        if (oldWireframeStyle.color !== newWireframeStyle.color\n            || oldWireframeStyle.thickness !== newWireframeStyle.thickness)\n        {\n            instance.wireframeStyle = newWireframeStyle;\n        }\n    },\n});\n"],"names":["Matrix","PixiComponent","TransformerImpl"],"mappings":"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"}