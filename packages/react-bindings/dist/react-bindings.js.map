{"version":3,"file":"react-bindings.js","sources":["../src/Transformer.ts"],"sourcesContent":["import { DisplayObject } from '@pixi/display';\nimport { PixiComponent } from '@inlet/react-pixi';\nimport { Transformer as TransformerImpl, TransformerHandle as TransformerHandleImpl } from '@pixi-essentials/transformer';\n\nimport type { ITransformerStyle, ITransformerHandleStyle } from '@pixi-essentials/transformer';\nimport type React from 'react';\n\nconst EMPTY: any = {};\n\n/**\n * @internal\n */\nexport type TransformerProps = {\n    group?: DisplayObject[];\n    handleConstructor?: typeof TransformerHandleImpl;\n    handleStyle?: Partial<ITransformerHandleStyle>;\n    skewRadius?: number;\n    skewTransform?: boolean;\n    transientGroupTilt?: boolean;\n    wireframeStyle?: Partial<ITransformerStyle>;\n};\n\n/**\n * Transformer component\n *\n * @see https://github.com/SukantPal/pixi-essentials/tree/master/packages/transformer\n */\nexport const Transformer: React.FC<TransformerProps> = PixiComponent<TransformerProps, TransformerImpl>('Transformer', {\n    create: (props: TransformerProps): TransformerImpl => new TransformerImpl(props),\n    applyProps(instance: TransformerImpl, oldProps: TransformerProps, newProps: TransformerProps): void\n    {\n        instance.group = newProps.group;\n        instance.skewRadius = newProps.skewRadius || instance.skewRadius;\n        instance.skewTransform = newProps.skewTransform;\n        instance.transientGroupTilt = newProps.transientGroupTilt;\n\n        if (oldProps.handleConstructor !== newProps.handleConstructor)\n        {\n            throw new Error('Transformer does not support changing the TransformerHandleConstructor!');\n        }\n\n        const oldHandleStyle = oldProps.handleStyle || EMPTY;\n        const newHandleStyle = newProps.handleStyle || EMPTY;\n\n        if (oldHandleStyle.color !== newHandleStyle.color\n                || oldHandleStyle.outlineColor !== newHandleStyle.outlineColor\n                || oldHandleStyle.outlineThickness !== newHandleStyle.outlineThickness\n                || oldHandleStyle.radius !== newHandleStyle.radius\n                || oldHandleStyle.shape !== newHandleStyle.shape)\n        {\n            instance.handleStyle = newHandleStyle;\n        }\n\n        const oldWireframeStyle = oldProps.wireframeStyle || EMPTY;\n        const newWireframeStyle = newProps.wireframeStyle || EMPTY;\n\n        if (oldWireframeStyle.color !== newWireframeStyle.color\n            || oldWireframeStyle.thickness !== newWireframeStyle.thickness)\n        {\n            instance.wireframeStyle = newWireframeStyle;\n        }\n    },\n});\n"],"names":["EMPTY","Transformer","PixiComponent","create","props","TransformerImpl","[object Object]","instance","oldProps","newProps","group","skewRadius","skewTransform","transientGroupTilt","handleConstructor","Error","oldHandleStyle","handleStyle","newHandleStyle","color","outlineColor","outlineThickness","radius","shape","oldWireframeStyle","wireframeStyle","newWireframeStyle","thickness"],"mappings":";;;;;;;;;mGAOA,MAAMA,EAAa,GAoBNC,EAA0CC,gBAAiD,cAAe,CACnHC,OAASC,GAA6C,IAAIC,cAAgBD,GAC1EE,WAAWC,EAA2BC,EAA4BC,GAO9D,GALAF,EAASG,MAAQD,EAASC,MAC1BH,EAASI,WAAaF,EAASE,YAAcJ,EAASI,WACtDJ,EAASK,cAAgBH,EAASG,cAClCL,EAASM,mBAAqBJ,EAASI,mBAEnCL,EAASM,oBAAsBL,EAASK,kBAExC,MAAM,IAAIC,MAAM,2EAGpB,MAAMC,EAAiBR,EAASS,aAAejB,EACzCkB,EAAiBT,EAASQ,aAAejB,EAE3CgB,EAAeG,QAAUD,EAAeC,OACjCH,EAAeI,eAAiBF,EAAeE,cAC/CJ,EAAeK,mBAAqBH,EAAeG,kBACnDL,EAAeM,SAAWJ,EAAeI,QACzCN,EAAeO,QAAUL,EAAeK,QAE/ChB,EAASU,YAAcC,GAG3B,MAAMM,EAAoBhB,EAASiB,gBAAkBzB,EAC/C0B,EAAoBjB,EAASgB,gBAAkBzB,EAEjDwB,EAAkBL,QAAUO,EAAkBP,OAC3CK,EAAkBG,YAAcD,EAAkBC,YAErDpB,EAASkB,eAAiBC"}