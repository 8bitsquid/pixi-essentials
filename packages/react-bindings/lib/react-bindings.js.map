{"version":3,"file":"react-bindings.js","sources":["../src/utils/applyEventProps.ts","../src/Transformer.ts"],"sourcesContent":["import type { DisplayObject } from '@pixi/display';\n\n/**\n * Removes old listeners and applies the new ones passed in the props\n *\n * @param displayObject - display-object emitting events\n * @param events - object mapping handler prop-names to the fired events\n * @param oldProps - old props. If calling on first props being passed, this should be `{}`.\n * @param newProps - new props.\n */\nexport function applyEventProps(\n    displayObject: DisplayObject,\n    events: Record<string, string>,\n    oldProps: any,\n    newProps: any,\n): void\n{\n    for (const handlerName in events)\n    {\n        const oldHandler = oldProps[handlerName];\n        const newHandler = newProps[handlerName];\n        const event = events[handlerName];\n\n        if (oldHandler !== newHandler)\n        {\n            if (oldHandler)\n            {\n                displayObject.off(event, oldHandler);\n            }\n\n            if (newHandler)\n            {\n                displayObject.on(event, newHandler);\n            }\n        }\n    }\n}\n","import { DisplayObject } from '@pixi/display';\nimport { Matrix } from '@pixi/math';\nimport { PixiComponent } from '@inlet/react-pixi';\nimport { Transformer as TransformerImpl, TransformerHandle as TransformerHandleImpl } from '@pixi-essentials/transformer';\nimport { applyEventProps } from './utils/applyEventProps';\n\nimport type { ITransformerStyle, ITransformerHandleStyle } from '@pixi-essentials/transformer';\nimport type React from 'react';\n\nconst EMPTY: any = {};\n\nconst IDENTITY_MATRIX = Matrix.IDENTITY;// Prevent reinstantation each time\n\n/**\n * @internal\n */\nexport type TransformerProps = {\n    centeredScaling?: boolean;\n    enabledHandles?: Array<string>;\n    group?: DisplayObject[];\n    handleConstructor?: typeof TransformerHandleImpl;\n    handleStyle?: Partial<ITransformerHandleStyle>;\n    projectionTransform?: Matrix;\n    rotateEnabled?: boolean;\n    rotationSnaps?: number[];\n    rotationSnapTolerance?: number;\n    scaleEnabled?: boolean;\n    skewEnabled?: boolean;\n    skewRadius?: number;\n    skewSnaps?: number[];\n    skewSnapTolerance?: number;\n    translateEnabled?: boolean;\n    transientGroupTilt?: boolean;\n    transformchange?: () => void;\n    wireframeStyle?: Partial<ITransformerStyle>;\n};\n\n/**\n * @ignore\n */\nconst HANDLER_TO_EVENT = {\n    transformchange: 'transformchange',\n};\n\n/**\n * Transformer component\n *\n * @see https://github.com/SukantPal/pixi-essentials/tree/master/packages/transformer\n */\nexport const Transformer: React.FC<TransformerProps> = PixiComponent<TransformerProps, TransformerImpl>('Transformer', {\n    create: (props: TransformerProps): TransformerImpl =>\n    {\n        const transformerImpl = new TransformerImpl(props as any);\n\n        applyEventProps(transformerImpl, HANDLER_TO_EVENT, {}, props);\n\n        return transformerImpl;\n    },\n    applyProps(instance: TransformerImpl, oldProps: TransformerProps, newProps: TransformerProps): void\n    {\n        applyEventProps(instance, HANDLER_TO_EVENT, oldProps, newProps);\n\n        instance.group = newProps.group || [];\n\n        instance.centeredScaling = newProps.centeredScaling;\n        instance.enabledHandles = newProps.enabledHandles as any;\n        instance.projectionTransform.copyFrom(newProps.projectionTransform || IDENTITY_MATRIX);\n        instance.skewRadius = newProps.skewRadius || instance.skewRadius;\n        instance.rotateEnabled = newProps.rotateEnabled !== false;\n        instance.scaleEnabled = newProps.scaleEnabled !== false;\n        instance.skewEnabled = newProps.skewEnabled === true;\n        instance.translateEnabled = newProps.translateEnabled !== false;\n        instance.transientGroupTilt = newProps.transientGroupTilt;\n\n        if (oldProps.handleConstructor !== newProps.handleConstructor)\n        {\n            throw new Error('Transformer does not support changing the TransformerHandleConstructor!');\n        }\n\n        if (oldProps.rotationSnaps !== newProps.rotationSnaps)\n        {\n            instance.rotationSnaps = newProps.rotationSnaps;\n        }\n        if (oldProps.rotationSnapTolerance !== newProps.rotationSnapTolerance)\n        {\n            instance.rotationSnapTolerance = newProps.rotationSnapTolerance;\n        }\n        if (oldProps.skewSnaps !== newProps.skewSnaps)\n        {\n            instance.skewSnaps = newProps.skewSnaps;\n        }\n        if (oldProps.skewSnapTolerance !== newProps.skewSnapTolerance)\n        {\n            instance.skewSnapTolerance = newProps.skewSnapTolerance;\n        }\n\n        const oldHandleStyle = oldProps.handleStyle || EMPTY;\n        const newHandleStyle = newProps.handleStyle || EMPTY;\n\n        if (oldHandleStyle.color !== newHandleStyle.color\n                || oldHandleStyle.outlineColor !== newHandleStyle.outlineColor\n                || oldHandleStyle.outlineThickness !== newHandleStyle.outlineThickness\n                || oldHandleStyle.radius !== newHandleStyle.radius\n                || oldHandleStyle.shape !== newHandleStyle.shape)\n        {\n            instance.handleStyle = newHandleStyle;\n        }\n\n        const oldWireframeStyle = oldProps.wireframeStyle || EMPTY;\n        const newWireframeStyle = newProps.wireframeStyle || EMPTY;\n\n        if (oldWireframeStyle.color !== newWireframeStyle.color\n            || oldWireframeStyle.thickness !== newWireframeStyle.thickness)\n        {\n            instance.wireframeStyle = newWireframeStyle;\n        }\n    },\n});\n"],"names":["Matrix","PixiComponent","TransformerImpl"],"mappings":"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"}