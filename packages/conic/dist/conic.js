/*!
 * @pixi-essentials/conic - v1.0.0
 * Compiled Wed, 15 Jul 2020 15:46:05 UTC
 *
 * @pixi-essentials/conic is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
this.PIXI=this.PIXI||{};var _pixi_essentials_conic=function(n,t,e,r,i,o){"use strict";var a=new t.AttributeRedirect({source:"worldPositionData",attrib:"aWorldPosition",type:"float32",size:2,glType:e.TYPES.FLOAT,glSize:2}),s=new t.AttributeRedirect({source:"texturePositionData",attrib:"aTexturePosition",type:"float32",size:2,glType:e.TYPES.FLOAT,glSize:2}),c=new t.UniformRedirect({source:"k",uniform:"k"}),v=new t.UniformRedirect({source:"l",uniform:"l"}),u=new t.UniformRedirect({source:"m",uniform:"m"}),f=new t.BatchShaderFactory("#version 100\n#define SHADER_NAME Conic-Renderer-Fallback-Shader\n\nprecision mediump float;\n\nattribute vec2 aWorldPosition;\nattribute vec2 aTexturePosition;\nattribute float aMasterID;\nattribute float aUniformID;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vWorldCoord;\nvarying vec2 vTextureCoord;\nvarying float vMasterID;\nvarying float vUniformID;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aWorldPosition, 1)).xy, 0, 1);\n\n    vWorldCoord = gl_Position.xy;\n    vTextureCoord = aTexturePosition;\n    vMasterID = aMasterID;\n    vUniformID = aUniformID;\n}","#version 100\n#ifdef GL_OES_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n#endif\n#define SHADER_NAME Conic-Renderer-Fallback-Shader\n\nprecision mediump float;\n\nuniform sampler2D uSamplers[%texturesPerBatch%];\n\nvarying vec2 vWorldCoord;\nvarying vec2 vTextureCoord;\nvarying float vMasterID;\nvarying float vUniformID;\n\nuniform vec3 k[%uniformsPerBatch%];\nuniform vec3 l[%uniformsPerBatch%];\nuniform vec3 m[%uniformsPerBatch%];\nuniform bool inside;\n\nfloat sampleCurve(vec2 point, vec3 kv, vec3 lv, vec3 mv)\n{\n    float k = dot(vec3(vTextureCoord, 1), kv);\n    float l = dot(vec3(vTextureCoord, 1), lv);\n    float m = dot(vec3(vTextureCoord, 1), mv);\n\n    return k*k - l*m;\n}\n\nvoid main(void)\n{\n    vec3 kv, lv, mv;\n\n    for (int i = 0; i < %uniformsPerBatch%; i++)\n    {\n        if (float(i) > vUniformID - 0.5) \n        {\n            kv = k[i];\n            lv = l[i];\n            mv = m[i];\n            break;\n        }\n    }\n\n    float k_ = dot(vec3(vTextureCoord, 1), kv);\n    float l_ = dot(vec3(vTextureCoord, 1), lv);\n    float m_ = dot(vec3(vTextureCoord, 1), mv);\n\n    float cv = k_ * k_ - l_ * m_;\n\n#ifdef GL_OES_standard_derivatives\n    float cvdx = dFdx(cv);\n    float cvdy = dFdy(cv);\n    vec2 gradientTangent = vec2(cvdx, cvdy);\n\n    float signedDistance = cv / length(gradientTangent);\n    bool antialias = signedDistance > -1. && signedDistance < 1.;\n#endif\n\n    vec4 color;\n\n    if ((inside && cv < 0.) || (!inside && cv >= 0.) \n#ifdef GL_OES_standard_derivatives\n            || antialias\n#endif\n    )\n    {\n        for (int i = 0; i < %texturesPerBatch%; i++)\n        {\n            if (float(i) > vMasterID - 0.5)\n            {\n                color = texture2D(uSamplers[i], vTextureCoord);\n                break;\n            }\n        }\n    }\n    else\n    {\n        color = vec4(0, 0, 0, 1);\n    }\n\n#ifdef GL_OES_standard_derivatives\n    if (antialias)\n    {\n        float weight = inside ? (1. - signedDistance) / 2. : (1. + signedDistance) / 2.;\n        \n        color = weight * color + (1. - weight) * vec4(0, 0, 0, 1);\n    }\n#endif\n\n    gl_FragColor = color;\n}",{}).derive(),l=new t.BatchShaderFactory("#version 300 es\n\n#define SHADER_NAME Conic-Renderer-Shader\n\nprecision mediump float;\n\nin vec2 aWorldPosition;\nin vec2 aTexturePosition;\nin float aMasterID;\nin float aUniformID;\n\nuniform mat3 projectionMatrix;\n\nout vec2 vWorldCoord;\nout vec2 vTextureCoord;\nout float vMasterID;\nout float vUniformID;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aWorldPosition, 1)).xy, 0, 1);\n\n    vWorldCoord = gl_Position.xy;\n    vTextureCoord = aTexturePosition;\n    vMasterID = aMasterID;\n    vUniformID = aUniformID;\n}","#version 300 es\n#define SHADER_NAME Conic-Renderer-Shader\n\nprecision mediump float;\n\nuniform sampler2D uSamplers[%texturesPerBatch%];\n\nin vec2 vWorldCoord;\nin vec2 vTextureCoord;\nin float vMasterID;\nin float vUniformID;\n\nout vec4 fragmentColor;\n\nuniform vec3 k[%uniformsPerBatch%];\nuniform vec3 l[%uniformsPerBatch%];\nuniform vec3 m[%uniformsPerBatch%];\nuniform bool inside;\n\nvoid main(void)\n{\n    vec3 kv, lv, mv;\n\n    for (int i = 0; i < %uniformsPerBatch%; i++)\n    {\n        if (float(i) > vUniformID - 0.5) \n        {\n            kv = k[i];\n            lv = l[i];\n            mv = m[i];\n            break;\n        }\n    }\n\n    float k_ = dot(vec3(vTextureCoord, 1), kv);\n    float l_ = dot(vec3(vTextureCoord, 1), lv);\n    float m_ = dot(vec3(vTextureCoord, 1), mv);\n\n    float cv = k_ * k_ - l_ * m_;\n\n    float cvdx = dFdx(cv);\n    float cvdy = dFdy(cv);\n    vec2 gradientTangent = vec2(cvdx, cvdy);\n\n    float signedDistance = cv / length(gradientTangent);\n    bool antialias = signedDistance > -1. && signedDistance < 1.;\n\n    vec4 color;\n\n    if ((inside && cv < 0.) || (!inside && cv >= 0.) || antialias)\n    {\n        for (int i = 0; i < %texturesPerBatch%; i++)\n        {\n            if (float(i) > vMasterID - 0.5)\n            {\n                color = texture(uSamplers[i], vTextureCoord);\n                break;\n            }\n        }\n    }\n    else\n    {\n        color = vec4(0, 0, 0, 1);\n    }\n\n    if (antialias)\n    {\n        float weight = inside ? (1. - signedDistance) / 2. : (1. + signedDistance) / 2.;\n        \n        color = weight * color + (1. - weight) * vec4(0, 0, 0, 1);\n    }\n\n    fragmentColor = color;\n}",{}).derive(),d=t.BatchRendererPluginFactory.from({attribSet:[a,s],uniformSet:[c,v,u],indexProperty:"indexData",textureProperty:"_texture",texIDAttrib:"aMasterID",uniformIDAttrib:"aUniformID",inBatchIDAttrib:"aBatchID",shaderFunction:function(n){var t=n.renderer,e=t.context;return 1!==e.webGLVersion||e.extensions.standardDerivatives||(e.extensions.standardDerivatives=t.gl.getExtension("OES_standard_derivatives")),1===e.webGLVersion?f(n):l(n)},BatchFactoryClass:t.AggregateUniformsBatchFactory});r.Renderer.registerPlugin("conicRenderer",d);var m=d;var h={adjoint:function(n,t){var e=t[0],r=t[1],i=t[2],o=t[3],a=t[4],s=t[5],c=t[6],v=t[7],u=t[8];return n[0]=a*u-s*v,n[1]=i*v-r*u,n[2]=r*s-i*a,n[3]=s*c-o*u,n[4]=e*u-i*c,n[5]=i*o-e*s,n[6]=o*v-a*c,n[7]=r*c-e*v,n[8]=e*a-r*o,n},clone:function(n){var t=new Float32Array(9);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},copy:function(n,t){return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},create:function(){var n=new Float32Array(9);return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n},determinant:function(n){var t=n[0],e=n[1],r=n[2],i=n[3],o=n[4],a=n[5],s=n[6],c=n[7],v=n[8];return t*(v*o-a*c)+e*(a*s-v*i)+r*(c*i-o*s)},frob:function(n){return Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]+n[3]*n[3]+n[4]*n[4]+n[5]*n[5]+n[6]*n[6]+n[7]*n[7]+n[8]*n[8])},fromMat2:function(n,t){return n[0]=t[0],n[1]=t[1],n[2]=0,n[3]=t[2],n[4]=t[3],n[5]=0,n[6]=t[4],n[7]=t[5],n[8]=1,n},fromMat4:function(n,t){return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[4],n[4]=t[5],n[5]=t[6],n[6]=t[8],n[7]=t[9],n[8]=t[10],n},fromQuat:function(n,t){var e=t[0],r=t[1],i=t[2],o=t[3],a=e+e,s=r+r,c=i+i,v=e*a,u=r*a,f=r*s,l=i*a,d=i*s,m=i*c,h=o*a,p=o*s,x=o*c;return n[0]=1-f-m,n[3]=u-x,n[6]=l+p,n[1]=u+x,n[4]=1-v-m,n[7]=d-h,n[2]=l-p,n[5]=d+h,n[8]=1-v-f,n},identity:function(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n},invert:function(n,t){var e=t[0],r=t[1],i=t[2],o=t[3],a=t[4],s=t[5],c=t[6],v=t[7],u=t[8],f=u*a-s*v,l=-u*o+s*c,d=v*o-a*c,m=e*f+r*l+i*d;return m?(m=1/m,n[0]=f*m,n[1]=(-u*r+i*v)*m,n[2]=(s*r-i*a)*m,n[3]=l*m,n[4]=(u*e-i*c)*m,n[5]=(-s*e+i*o)*m,n[6]=d*m,n[7]=(-v*e+r*c)*m,n[8]=(a*e-r*o)*m,n):null},multiply:function(n,t,e){var r=t[0],i=t[1],o=t[2],a=t[3],s=t[4],c=t[5],v=t[6],u=t[7],f=t[8],l=e[0],d=e[1],m=e[2],h=e[3],p=e[4],x=e[5],y=e[6],g=e[7],D=e[8];return n[0]=l*r+d*a+m*v,n[1]=l*i+d*s+m*u,n[2]=l*o+d*c+m*f,n[3]=h*r+p*a+x*v,n[4]=h*i+p*s+x*u,n[5]=h*o+p*c+x*f,n[6]=y*r+g*a+D*v,n[7]=y*i+g*s+D*u,n[8]=y*o+g*c+D*f,n},normalFromMat4:function(n,t){var e=t[0],r=t[1],i=t[2],o=t[3],a=t[4],s=t[5],c=t[6],v=t[7],u=t[8],f=t[9],l=t[10],d=t[11],m=t[12],h=t[13],p=t[14],x=t[15],y=e*s-r*a,g=e*c-i*a,D=e*v-o*a,_=r*c-i*s,I=r*v-o*s,T=i*v-o*c,P=u*h-f*m,b=u*p-l*m,k=u*x-d*m,C=f*p-l*h,w=f*x-d*h,M=l*x-d*p,S=y*M-g*w+D*C+_*k-I*b+T*P;return S?(S=1/S,n[0]=(s*M-c*w+v*C)*S,n[1]=(c*k-a*M-v*b)*S,n[2]=(a*w-s*k+v*P)*S,n[3]=(i*w-r*M-o*C)*S,n[4]=(e*M-i*k+o*b)*S,n[5]=(r*k-e*w-o*P)*S,n[6]=(h*T-p*I+x*_)*S,n[7]=(p*D-m*T-x*g)*S,n[8]=(m*I-h*D+x*y)*S,n):null},rotate:function(n,t,e){var r=t[0],i=t[1],o=t[2],a=t[3],s=t[4],c=t[5],v=t[6],u=t[7],f=t[8],l=Math.sin(e),d=Math.cos(e);return n[0]=d*r+l*a,n[1]=d*i+l*s,n[2]=d*o+l*c,n[3]=d*a-l*r,n[4]=d*s-l*i,n[5]=d*c-l*o,n[6]=v,n[7]=u,n[8]=f,n},scale:function(n,t,e){var r=e[0],i=e[1];return n[0]=r*t[0],n[1]=r*t[1],n[2]=r*t[2],n[3]=i*t[3],n[4]=i*t[4],n[5]=i*t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},str:function(n){return"mat3("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]+", "+n[4]+", "+n[5]+", "+n[6]+", "+n[7]+", "+n[8]+")"},translate:function(n,t,e){var r=t[0],i=t[1],o=t[2],a=t[3],s=t[4],c=t[5],v=t[6],u=t[7],f=t[8],l=e[0],d=e[1];return n[0]=r,n[1]=i,n[2]=o,n[3]=a,n[4]=s,n[5]=c,n[6]=l*r+d*a+v,n[7]=l*i+d*s+u,n[8]=l*o+d*c+f,n},transpose:function(n,t){if(n===t){var e=t[1],r=t[2],i=t[5];n[1]=t[3],n[2]=t[6],n[3]=e,n[5]=t[7],n[6]=r,n[7]=i}else n[0]=t[0],n[1]=t[3],n[2]=t[6],n[3]=t[1],n[4]=t[4],n[5]=t[7],n[6]=t[2],n[7]=t[5],n[8]=t[8];return n}},p=(h.adjoint,h.clone,h.copy,h.create,h.determinant,h.frob,h.fromMat2,h.fromMat4,h.fromQuat,h.identity,h.invert,h.multiply,h.normalFromMat4,h.rotate,h.scale,h.str,h.translate,h.transpose,function(){function n(){this.k=[0,1,-1],this.l=[2,-1,-1],this.m=[-2,-1,-1],this.textureTransform=new i.Matrix,this._dirtyID=0}return n.prototype.setk=function(n,t,e){return this.k[0]=n,this.k[1]=t,this.k[2]=e,this._dirtyID++,this},n.prototype.setl=function(n,t,e){return this.l[0]=n,this.l[1]=t,this.l[2]=e,this._dirtyID++,this},n.prototype.setm=function(n,t,e){return this.m[0]=n,this.m[1]=t,this.m[2]=e,this._dirtyID++,this},n.prototype.setTransform=function(){for(var n,t,e,r,i,o,a,s,c,v,u,f,l=[],d=0;d<arguments.length;d++)l[d]=arguments[d];if(1===l.length)return this.textureTransform.copyFrom(l[0]),this;if(this.textureTransform.identity(),6===l.length){var m=l;n=m[0].x,t=m[0].y,e=m[1].x,r=m[1].y,i=m[2].x,o=m[2].y,a=m[3].x,s=m[3].y,c=m[4].x,v=m[4].y,u=m[5].x,f=m[5].y}else{var p=l;n=p[0],t=p[1],e=p[2],r=p[3],i=p[4],o=p[5],a=p[6],s=p[7],c=p[8],v=p[9],u=p[10],f=p[11]}var x=[n,e,i,t,r,o,1,1,1],y=h.invert(x,x);return this.textureTransform.a=y[0]*a+y[3]*c+y[6]*u,this.textureTransform.c=y[1]*a+y[4]*c+y[7]*u,this.textureTransform.tx=y[2]*a+y[5]*c+y[8]*u,this.textureTransform.b=y[0]*s+y[3]*v+y[6]*f,this.textureTransform.d=y[1]*s+y[4]*v+y[7]*f,this.textureTransform.ty=y[2]*s+y[5]*v+y[8]*f,this},n.prototype.update=function(){return this._dirtyID++,this},n}()),x=function(n,t){return(x=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e])})(n,t)};var y=new i.Matrix,g=function(n){function t(t){void 0===t&&(t=new p);var e=n.call(this)||this;return e.shape=t,e._dirtyID=0,e._transformID=0,e._updateID=-1,e.worldPositionData=[],e.texturePositionData=[],e._texture=r.Texture.WHITE,e}return function(n,t){function e(){this.constructor=n}x(n,t),n.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}(t,n),Object.defineProperty(t.prototype,"k",{get:function(){return this.shape.k},set:function(n){var t;(t=this.shape).setk.apply(t,n)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"l",{get:function(){return this.shape.l},set:function(n){var t;(t=this.shape).setl.apply(t,n)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"m",{get:function(){return this.shape.m},set:function(n){var t;(t=this.shape).setm.apply(t,n)},enumerable:!0,configurable:!0}),t.prototype._render=function(n){n.plugins.conicRenderer||(n.plugins.conicRenderer=new m(n,null)),n.batch.setObjectRenderer(n.plugins.conicRenderer),n.plugins.conicRenderer.render(this)},t.prototype.drawTriangle=function(n,t,e,r,i,o){var a=this.texturePositionData,s=a.length;a.length+=6,a[s]=n,a[s+1]=t,a[s+2]=e,a[s+3]=r,a[s+4]=i,a[s+5]=o},t.prototype.drawRect=function(n,t,e,r){var i=this.texturePositionData,o=i.length;i.length+=12,i[o]=n,i[o+1]=t,i[o+2]=n+e,i[o+3]=t,i[o+4]=n+e,i[o+5]=t+r,i[o+6]=n,i[o+7]=t,i[o+8]=n+e,i[o+9]=t+r,i[o+10]=n,i[o+11]=t+r},t.prototype.updateConic=function(){var n=this.worldPositionData,t=this.texturePositionData;n.length=t.length;for(var e=y.copyFrom(this.shape.textureTransform).prepend(this.worldTransform),r=e.a,i=e.b,o=e.c,a=e.d,s=e.tx,c=e.ty,v=0,u=n.length/2;v<u;v++){var f=t[2*v],l=t[2*v+1];n[2*v]=r*f+o*l+s,n[2*v+1]=i*f+a*l+c}this._updateID=this._dirtyID;var d=this.indexData=new Array(n.length/2);for(v=0,u=d.length;v<u;v++)d[v]=v},t.prototype.updateTransform=function(){var t=n.prototype.updateTransform.call(this);return this._transformID!==this.transform._worldID&&(this.updateConic(),this._transformID=this.transform._worldID),t},t}(o.Container);return n.Conic=p,n.ConicGraphic=g,n}({},pixiBatchRenderer,constants,core,math,display);Object.assign(this.PIXI,_pixi_essentials_conic);
//# sourceMappingURL=conic.js.map
