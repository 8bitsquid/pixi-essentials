{"version":3,"file":"conic.js","sources":["../src/ConicRenderer.ts","../src/Conic.ts","../src/ConicDisplay.ts"],"sourcesContent":["import {\n    AggregateUniformsBatchFactory,\n    AttributeRedirect,\n    BatchRenderer,\n    BatchShaderFactory,\n    BatchRendererPluginFactory,\n    UniformRedirect,\n} from 'pixi-batch-renderer';\nimport { TYPES } from '@pixi/constants';\nimport { Renderer, Shader } from '@pixi/core';\nimport conicVertexSrc from './conic-renderer.vert';\nimport conicVertexFallbackSrc from './conic-renderer-fallback.vert';\nimport conicFragmentSrc from './conic-renderer.frag';\nimport conicFragmentFallbackSrc from './conic-renderer-fallback.frag';\n\nconst ATTRIBUTE_WORLD_POSITION = new AttributeRedirect({\n    source: 'vertexData',\n    attrib: 'aWorldPosition',\n    type: 'float32',\n    size: 2,\n    glType: TYPES.FLOAT,\n    glSize: 2,\n});\n\nconst ATTRIBUTE_TEXTURE_POSITION = new AttributeRedirect({\n    source: 'uvData',\n    attrib: 'aTexturePosition',\n    type: 'float32',\n    size: 2,\n    glType: TYPES.FLOAT,\n    glSize: 2,\n});\n\nconst UNIFORM_K = new UniformRedirect({\n    source: 'k',\n    uniform: 'k',\n});\n\nconst UNIFORM_L = new UniformRedirect({\n    source: 'l',\n    uniform: 'l',\n});\n\nconst UNIFORM_M = new UniformRedirect({\n    source: 'm',\n    uniform: 'm',\n});\n\nconst webGL1Shader = new BatchShaderFactory(conicVertexFallbackSrc, conicFragmentFallbackSrc, { inside: true }).derive();\nconst webGL2Shader = new BatchShaderFactory(conicVertexSrc, conicFragmentSrc, { inside: true }).derive();\n\nconst shaderFunction = (crendr: BatchRenderer): Shader =>\n{\n    const renderer = crendr.renderer;\n    const contextSystem = renderer.context;\n\n    if (contextSystem.webGLVersion === 1 && !contextSystem.extensions.standardDerivatives)\n    {\n        contextSystem.extensions.standardDerivatives = renderer.gl.getExtension('OES_standard_derivatives');\n    }\n\n    if (contextSystem.webGLVersion === 1)\n    {\n        return webGL1Shader(crendr);\n    }\n\n    return webGL2Shader(crendr);\n};\n\nconst conicRenderer = BatchRendererPluginFactory.from({\n    attribSet: [\n        ATTRIBUTE_WORLD_POSITION,\n        ATTRIBUTE_TEXTURE_POSITION,\n    ],\n    uniformSet: [\n        UNIFORM_K,\n        UNIFORM_L,\n        UNIFORM_M,\n    ],\n    indexProperty: 'indexData',\n    textureProperty: '_texture',\n    texIDAttrib: 'aMasterID',\n    uniformIDAttrib: 'aUniformID',\n    inBatchIDAttrib: 'aBatchID', // Remove this: pixi-batch-renderer has a bug where it doesn't work without it (uniform aggregation)\n    shaderFunction,\n    BatchFactoryClass: AggregateUniformsBatchFactory,\n});\n\nRenderer.registerPlugin('conic', conicRenderer);\n\nexport const ConicRenderer = conicRenderer;\n","import { Matrix, Point } from '@pixi/math';\n\nconst SQRT_2 = Math.sqrt(2);\n\n/**\n * A linear function _ax + by + c_, where the coefficients _a, b, c_ are stored\n * in a 3-tuple.\n *\n * @public\n */\nexport type LinearFunctional = [number, number, number];\n\n/**\n * Describes a conic section or any quadric curve\n *\n * A quadric curve can be represented in the form _k<sup>2</sup> - lm_, where, _k_, _l_, _m_\n * are linear functionals. _l_ and _m_ are two lines tangent to the curve, while _k_ is the\n * line connecting the two points of tangency.\n *\n * @public\n */\nexport class Conic\n{\n    public k: LinearFunctional;\n    public l: LinearFunctional;\n    public m: LinearFunctional;\n    public controlPoints: [Point, Point, Point];\n\n    public _dirtyID: number;\n\n    constructor()\n    {\n        /**\n         * The chord connecting the points of tangency on _l_ and _m_.\n         */\n        this.k = [1, 0, 0];\n\n        /**\n         * A line tangent to the curve.\n         */\n        this.l = [0, 1, 0];\n\n        /**\n         * A line tangent to the curve.\n         */\n        this.m = [0, 0, 1];\n\n        /**\n         * The control points in design space. The control points allow you to map design space points to the local space\n         * points when creating a graphic.\n         *\n         * By default, the conic is a quadratic bezier curve.\n         */\n        this.controlPoints = [\n            new Point(0, 0),\n            new Point(0.5, 0),\n            new Point(1, 1),\n        ];\n\n        /**\n         * Flags changes in the shape data\n         */\n        this._dirtyID = 0;\n    }\n\n    /**\n     * Sets the equation of the \"k\" line to _ax + by + c = 0_.\n     *\n     * @param a\n     * @param b\n     * @param c\n     */\n    setk(a: number, b: number, c: number): this\n    {\n        this.k[0] = a;\n        this.k[1] = b;\n        this.k[2] = c;\n\n        this._dirtyID++;\n\n        return this;\n    }\n\n    /**\n     * Sets the equation of the \"l\" line to _ax + by + c = 0_.\n     *\n     * @param a\n     * @param b\n     * @param c\n     */\n    setl(a: number, b: number, c: number): this\n    {\n        this.l[0] = a;\n        this.l[1] = b;\n        this.l[2] = c;\n\n        this._dirtyID++;\n\n        return this;\n    }\n\n    /**\n     * Sets the equation of the line \"m\" to _ax + by + c = 0_.\n     *\n     * @param a\n     * @param b\n     * @param c\n     */\n    setm(a: number, b: number, c: number): this\n    {\n        this.m[0] = a;\n        this.m[1] = b;\n        this.m[2] = c;\n\n        this._dirtyID++;\n\n        return this;\n    }\n\n    /**\n     * Set control points in texture space\n     * @param c0\n     * @param c1\n     * @param c2\n     */\n    setControlPoints(c0: Point, c1: Point, c2: Point): void\n    {\n        this.controlPoints[0] = c0;\n        this.controlPoints[1] = c1;\n        this.controlPoints[2] = c2;\n    }\n\n    /**\n     * Flag the shape as dirty after you have modified the data directly.\n     */\n    update(): this\n    {\n        this._dirtyID++;\n\n        return this;\n    }\n\n    /**\n     * Creates a circular conic of the given {@code radius} that is in the bounding box\n     * (0,0,2_r_,2_r_).\n     *\n     * Implicit form:\n     * (_x_/√2 + _y_/√2 - _r_/√2)<sup>2</sup> - _xy_ = _0_\n     *\n     * Simplified form:\n     * (_x_ - _r_)<sup>2</sup> - (_y_ - _r_)<sup>2</sup> - r<sup>2</sup> = _0_\n     *\n     * @param radius - the radius of the circle\n     * @return the conic shape\n     */\n    static createCircle(radius: number): Conic\n    {\n        const conic = new Conic();\n\n        conic.setk(1 / SQRT_2, 1 / SQRT_2, -radius / SQRT_2);\n        conic.setl(1, 0, 0);\n        conic.setm(0, 1, 0);\n\n        return conic;\n    }\n\n    /**\n     * Creates an ellipse with the given major & minor semi-axes that is located in the\n     * bounding box (0,0,2_a_,2_b_).\n     *\n     * Implicit form:\n     * (_x_/_a_ + _y_/_b_ - 1)<sup>2</sup> - 2_xy_/_ab_ = 0\n     *\n     * Simplified form:\n     * (_x_/_a_ - 1)<sup>2</sup> + (_y_/_b_ -  1)<sup>2</sup> - 1 = 0\n     *\n     * @param a - major semi-axis length\n     * @param b - minor semi-axis length\n     */\n    static createEllipse(a: number, b: number): Conic\n    {\n        const conic = new Conic();\n\n        conic.setk(1 / a, 1 / b, -1);\n        conic.setl(2 / a, 0, 0);\n        conic.setm(0, 1 / b, 0);\n\n        return conic;\n    }\n\n    /**\n     * Creates a parabola that opens upward (for _a_ > 0); since parabolas are not closed\n     * curves, they do not have a bounding box.\n     *\n     * The standard bezier curve is the parabola _x_<sup>2</sup> - _y_, with the control\n     * points (0,0), (1/2,0), (1,1).\n     *\n     * Equation:\n     * x<sup>2 - 4_ay_ = 0\n     *\n     * @param a - distance of directrix, focus from the vertex of the parabola (0,0)\n     */\n    static createParabola(a: number): Conic\n    {\n        const conic = new Conic();\n\n        conic.setk(1, 0, 0);\n        conic.setl(0, 4 * a, 0);\n        conic.setm(0, 0, 1);\n\n        return conic;\n    }\n\n    /**\n     * Creates a hyperbola that opens up and down; since hyperbolas are not closed curves,\n     * they do not have a bounding box.\n     *\n     * Implicit form:\n     * 1<sup>2</sup> - (_y_/_b_ - _x_/_a_)(_y_/_b_ + _x_/_a_) = 0\n     *\n     * Simplified form:\n     * (y/b)<sup>2</sup> - (x/a)<sup>2</sup> = 1\n     *\n     * @param a - major semi-axis\n     * @param b - minor semi-axis\n     */\n    static createHyperbola(a: number, b: number): Conic\n    {\n        const conic = new Conic();\n\n        conic.setk(0, 0, 1);\n        conic.setl(-1 / a, 1 / b, 0);\n        conic.setm(1 / a, 1 / b, 0);\n\n        return conic;\n    }\n}\n","import { Conic, LinearFunctional } from './Conic';\nimport { Container } from '@pixi/display';\nimport { Point, Matrix, Transform } from '@pixi/math';\nimport { Renderer, Texture } from '@pixi/core';\nimport { ConicRenderer } from './ConicRenderer';\nimport mat3 from 'gl-mat3';\n\nconst tempMatrix = new Matrix();\n\n/**\n * Draws a segment of conic section represented by the equation _k_<sup>2</sup>- _lm = 0_, where k, l, m are lines.\n *\n * This display-object shades the inside/outside of a conic section within a mesh.\n *\n * A conic curve can be represented in the form: _k_<sup>2</sup> - _lm = 0_, where k, l, m are lines described in\n * the form _ax + by + c = 0_. _l_ and _m_ are the tangents to the curve, and _k_ is a chord connecting the points\n * of tangency.\n */\nexport class ConicDisplay extends Container\n{\n    public shape: Conic;\n\n    // Container\n    public transform: Transform;\n    public worldTransform: Matrix;\n\n    public vertexData: Array<number>;\n    public uvData: Array<number>;\n    public indexData: Array<number>;\n\n    protected _texture: Texture;\n    protected _updateID: number;\n    protected _transformID: number;\n    protected _dirtyID: number;\n\n    constructor(conic = new Conic(), texture: Texture)\n    {\n        super();\n\n        /**\n         * The conic curve drawn by this graphic.\n         */\n        this.shape = conic;\n\n        /**\n         * Flags whether the geometry data needs to be updated.\n         */\n        this._dirtyID = 0;\n\n        /**\n         * The world transform ID last when the geometry was updated.\n         */\n        this._transformID = 0;\n\n        /**\n         * Last {@link _dirtyID} when the geometry was updated.\n         */\n        this._updateID = -1;\n\n        /**\n         * World positions of the vertices\n         */\n        this.vertexData = [];\n\n        /**\n         * Texture positions of the vertices.\n         */\n        this.uvData = [];\n\n        this._texture = texture || Texture.WHITE;\n    }\n\n    /**\n     * @see Conic#k\n     */\n    get k(): [number, number, number]\n    {\n        return this.shape.k;\n    }\n    set k(line: [number, number, number])\n    {\n        this.shape.setk(...line);\n    }\n\n    /**\n     * @see Conic#l\n     */\n    get l(): [number, number, number]\n    {\n        return this.shape.l;\n    }\n    set l(line: [number, number, number])\n    {\n        this.shape.setl(...line);\n    }\n\n    /**\n     * @see Conic#m\n     */\n    get m(): [number, number, number]\n    {\n        return this.shape.m;\n    }\n    set m(line: [number, number, number])\n    {\n        this.shape.setm(...line);\n    }\n\n    get texture(): Texture\n    {\n        return this._texture;\n    }\n    set texture(tex: Texture)\n    {\n        this._texture = tex || Texture.WHITE;\n    }\n\n    _calculateBounds(): void\n    {\n        this._bounds.addVertexData(this.vertexData, 0, this.vertexData.length);\n    }\n\n    _render(renderer: Renderer): void\n    {\n        if (!renderer.plugins.conic)\n        {\n            renderer.plugins.conic = new ConicRenderer(renderer, null);\n        }\n\n        renderer.batch.setObjectRenderer(renderer.plugins.conic);\n        renderer.plugins.conic.render(this);\n    }\n\n    /**\n     * Draws the triangle formed by the control points of the shape.\n     */\n    drawControlPoints(): this\n    {\n        const controlPoints = this.shape.controlPoints;\n\n        this.drawTriangle(\n            controlPoints[0].x, controlPoints[0].y,\n            controlPoints[1].x, controlPoints[1].y,\n            controlPoints[2].x, controlPoints[2].y,\n        );\n\n        return this;\n    }\n\n    /**\n     * Draw a triangle defined in texture space transformed into local space. Generally, you would want to draw the triangle\n     * formed by the shape's control points.\n     *\n     * @param x0\n     * @param y0\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     */\n    drawTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number): this\n    {\n        const data = this.uvData;\n        const i = data.length;\n\n        data.length += 6;\n        data[i] = x0;\n        data[i + 1] = y0;\n        data[i + 2] = x1;\n        data[i + 3] = y1;\n        data[i + 4] = x2;\n        data[i + 5] = y2;\n\n        return this;\n    }\n\n    /**\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    drawRect(x: number, y: number, width: number, height: number): this\n    {\n        const data = this.uvData;\n        const i = data.length;\n\n        data.length += 12;\n        data[i] = x;\n        data[i + 1] = y;\n        data[i + 2] = x + width;\n        data[i + 3] = y;\n        data[i + 4] = x + width;\n        data[i + 5] = y + height;\n        data[i + 6] = x;\n        data[i + 7] = y;\n        data[i + 8] = x + width;\n        data[i + 9] = y + height;\n        data[i + 10] = x;\n        data[i + 11] = y + height;\n\n        return this;\n    }\n\n    /**\n     * Updates the geometry data for this conic.\n     */\n    updateConic(): void\n    {\n        const vertexData = this.vertexData;\n        const uvData = this.uvData;\n\n        vertexData.length = uvData.length;\n\n        const matrix = tempMatrix.copyFrom(this.worldTransform);\n        const { a, b, c, d, tx, ty } = matrix;\n\n        for (let i = 0, j = vertexData.length / 2; i < j; i++)\n        {\n            const x = uvData[(i * 2)];\n            const y = uvData[(i * 2) + 1];\n\n            vertexData[(i * 2)] = (a * x) + (c * y) + tx;\n            vertexData[(i * 2) + 1] = (b * x) + (d * y) + ty;\n        }\n\n        this._updateID = this._dirtyID;\n\n        const indexData = this.indexData = new Array(vertexData.length / 2);\n\n        // TODO: Remove indexData, pixi-batch-renderer might have a problem with it\n        for (let i = 0, j = indexData.length; i < j; i++)\n        {\n            indexData[i] = i;\n        }\n    }\n\n    /**\n     * Sets the local-space control points of the curve.\n     * @param c0\n     * @param c1\n     * @param c2\n     */\n    setControlPoints(c0: Point, c1: Point, c2: Point): void\n    {\n        const texturePoints = this.shape.controlPoints;\n\n        this.setTransform(texturePoints[0], texturePoints[1], texturePoints[2],\n            c0, c1, c2);\n    }\n\n    /**\n     * Set the transform of the conic\n     *\n     * @param matrix - transformation between design space and texture space\n     */\n    setTransform(matrix: Matrix): this;\n\n    /**\n     * Set the transformation by defining a triangle in design space _(a0, b0, c0)_ mapping to\n     * the triangle _(a1, b1, c1)_ in texture space.\n     *\n     * @param a0\n     * @param b0\n     * @param c0\n     * @param a1\n     * @param b1\n     * @param c1\n     */\n    setTransform(a0: Point, b0: Point, c0: Point, a1: Point, b1: Point, c1: Point): this;\n\n    /**\n     * Set the transformation by defining the triangle in design space _(ax0, ay0), (bx0, by0), (cx0, cy0)_\n     * mapping to the triangle _(ax1, ay1), (bx1, by1), (cx1, cy1)_ in texture space.\n     *\n     * @param ax0\n     * @param ay0\n     * @param bx0\n     * @param by0\n     * @param cx0\n     * @param cy0\n     * @param ax1\n     * @param ay1\n     * @param bx1\n     * @param by1\n     * @param cx1\n     * @param cy1\n     */\n    setTransform(ax0: number, ay0: number, bx0: number, by0: number, cx0: number, cy0: number,\n        ax1: number, ay1: number, bx1: number, by1: number, cx1: number, cy1: number): this;\n\n    setTransform(...args: any): this\n    {\n        const transform = this.transform;\n        const localTransform = transform.localTransform;\n\n        transform._localID++;\n\n        if (args.length === 1)\n        {\n            localTransform.copyFrom(args[0]);\n\n            return this;\n        }\n        if (args.length === 9)\n        {\n            super.setTransform(...args);\n        }\n\n        localTransform.identity();\n\n        // Design space\n        let ax0: number;\n        let ay0: number;\n        let bx0: number;\n        let by0: number;\n        let cx0: number;\n        let cy0: number;\n\n        // Texture space\n        let ax1: number;\n        let ay1: number;\n        let bx1: number;\n        let by1: number;\n        let cx1: number;\n        let cy1: number;\n\n        if (args.length === 6)\n        {\n            const points = args as Point[];\n\n            ax0 = points[0].x;\n            ay0 = points[0].y;\n            bx0 = points[1].x;\n            by0 = points[1].y;\n            cx0 = points[2].x;\n            cy0 = points[2].y;\n\n            ax1 = points[3].x;\n            ay1 = points[3].y;\n            bx1 = points[4].x;\n            by1 = points[4].y;\n            cx1 = points[5].x;\n            cy1 = points[5].y;\n        }\n        else\n        {\n            const coords = args as number[];\n\n            ax0 = coords[0];\n            ay0 = coords[1];\n            bx0 = coords[2];\n            by0 = coords[3];\n            cx0 = coords[4];\n            cy0 = coords[5];\n\n            ax1 = coords[6];\n            ay1 = coords[7];\n            bx1 = coords[8];\n            by1 = coords[9];\n            cx1 = coords[10];\n            cy1 = coords[11];\n        }\n\n        const input = [\n            ax0, bx0, cx0,\n            ay0, by0, cy0,\n            1, 1, 1,\n        ];\n        const inverse = mat3.invert(input, input);\n\n        // input * textureTransform = output\n        // textureTransform = inverse(input) * output\n        localTransform.a = (inverse[0] * ax1) + (inverse[3] * bx1) + (inverse[6] * cx1);\n        localTransform.c = (inverse[1] * ax1) + (inverse[4] * bx1) + (inverse[7] * cx1);\n        localTransform.tx = (inverse[2] * ax1) + (inverse[5] * bx1) + (inverse[8] * cx1);\n\n        localTransform.b = (inverse[0] * ay1) + (inverse[3] * by1) + (inverse[6] * cy1);\n        localTransform.d = (inverse[1] * ay1) + (inverse[4] * by1) + (inverse[7] * cy1);\n        localTransform.ty = (inverse[2] * ay1) + (inverse[5] * by1) + (inverse[8] * cy1);\n\n        transform.setFromMatrix(localTransform);\n\n        return this;\n    }\n\n    /**\n     * Updates the transform of the conic, and if changed updates the geometry data.\n     *\n     * @override\n     */\n    updateTransform(): void\n    {\n        const ret = super.updateTransform();\n\n        if (this._transformID !== this.transform._worldID)\n        {\n            this.updateConic();\n            this._transformID = this.transform._worldID;\n        }\n\n        return ret;\n    }\n}\n"],"names":["AttributeRedirect","TYPES","UniformRedirect","BatchShaderFactory","BatchRendererPluginFactory","AggregateUniformsBatchFactory","Renderer","Point","Matrix","Container","Texture"],"mappings":"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"}